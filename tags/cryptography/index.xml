<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cryptography on 飞鸿踏雪泥</title><link>https://dyhes.github.io/tags/cryptography/</link><description>Recent content in Cryptography on 飞鸿踏雪泥</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Aug 2025 20:27:12 +0800</lastBuildDate><atom:link href="https://dyhes.github.io/tags/cryptography/index.xml" rel="self" type="application/rss+xml"/><item><title>【Cryptography】Knowledge</title><link>https://dyhes.github.io/p/cryptographyknowledge/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://dyhes.github.io/p/cryptographyknowledge/</guid><description>&lt;h2 id="国密算法"&gt;国密算法
&lt;/h2&gt;&lt;p&gt;国密算法（中国商用密码算法）是由中国国家密码管理局（OSCCA）自主研发并标准化的密码算法体系，旨在保障国家信息安全、降低对国外加密技术的依赖，并在金融、政务、物联网等关键领域实现自主可控。其核心特点包括&lt;strong&gt;高安全性、高效性及政策合规性&lt;/strong&gt;，已成为中国信息安全领域的核心技术标准。以下是国密算法的系统解析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一核心算法分类及功能"&gt;🔐 &lt;strong&gt;一、核心算法分类及功能&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;国密算法覆盖对称加密、非对称加密、哈希算法等密码学领域，主要包含以下七类：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;算法名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型应用场景&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对称加密（分组）&lt;/td&gt;
&lt;td&gt;未公开，仅以硬件IP核形式存在；分组长度128位&lt;/td&gt;
&lt;td&gt;智能IC卡、门禁系统、加密芯片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;非对称加密&lt;/td&gt;
&lt;td&gt;基于椭圆曲线（ECC），256位密钥强度等同RSA-3072，效率更高&lt;/td&gt;
&lt;td&gt;数字签名（如电子合同）、HTTPS加密（国密SSL证书）、区块链身份认证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;哈希算法&lt;/td&gt;
&lt;td&gt;生成256位摘要，抗碰撞性强，安全性等同SHA-256&lt;/td&gt;
&lt;td&gt;数据完整性校验、数字证书指纹、区块链共识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对称加密（分组）&lt;/td&gt;
&lt;td&gt;公开算法，分组长度128位；加密速度优于AES-128&lt;/td&gt;
&lt;td&gt;无线局域网加密、金融交易保护、物联网数据传输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM7&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对称加密（分组）&lt;/td&gt;
&lt;td&gt;未公开，专用于非接触式IC卡&lt;/td&gt;
&lt;td&gt;校园一卡通、门禁卡、赛事门票&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM9&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;非对称加密&lt;/td&gt;
&lt;td&gt;基于标识加密（IBE），用户标识（如手机号）即公钥，简化密钥管理&lt;/td&gt;
&lt;td&gt;电子邮件加密、云存储安全、移动终端认证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ZUC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对称加密（序列）&lt;/td&gt;
&lt;td&gt;流密码算法，国际4G/5G通信标准&lt;/td&gt;
&lt;td&gt;移动通信加密、数字图像保护&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：SM2、SM3、SM4、ZUC已成为ISO/IEC国际标准，标志着中国密码技术的国际认可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="-二国密算法的核心优势"&gt;⚙️ &lt;strong&gt;二、国密算法的核心优势&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自主可控&lt;/strong&gt;
完全由中国设计，避免国际算法（如RSA、AES）可能存在的“后门”风险，符合《密码法》和《》要求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安全强度高&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SM2基于椭圆曲线离散对数难题，抗量子计算攻击能力优于RSA。&lt;/li&gt;
&lt;li&gt;SM3采用复杂压缩函数，抗碰撞性优于SHA-1，与SHA-256相当。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;高效资源利用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SM4加密速度比AES-128快30%，适合资源受限的物联网设备。&lt;/li&gt;
&lt;li&gt;SM9无需数字证书管理，降低企业部署成本。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="4"&gt;
&lt;li&gt;&lt;strong&gt;场景适配性强&lt;/strong&gt;
从硬件芯片（SM1）到云端通信（SM9），覆盖金融、政务、工业互联网等全场景需求。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-三典型应用场景"&gt;🌐 &lt;strong&gt;三、典型应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;金融领域&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数字支付&lt;/strong&gt;：SM4加密交易数据，SM3校验交易完整性，SM2用于U盾数字签名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区块链&lt;/strong&gt;：FISCO BCOS等国产公链采用SM2/SM3作为底层加密算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;电子政务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公文传输：SM2加密敏感文件，SM9实现公务员身份快速认证。&lt;/li&gt;
&lt;li&gt;政务云：SM4加密存储数据，SM3保障数据完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;物联网与5G&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设备认证：SM9为物联网设备分配基于标识的密钥。&lt;/li&gt;
&lt;li&gt;通信加密：ZUC算法保护5G基站与终端的数据传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="4"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;新兴技术领域&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;车联网：SM3用于车辆通信消息的哈希校验。&lt;/li&gt;
&lt;li&gt;云存储：SM9实现“邮箱即公钥”的邮件端到端加密。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-四与国际算法的对比"&gt;⚠️ &lt;strong&gt;四、与国际算法的对比&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;对比项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;国际算法（如RSA/AES）&lt;/th&gt;
&lt;th&gt;国密算法（如SM2/SM4）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;安全性&lt;/td&gt;
&lt;td&gt;RSA易受量子计算威胁&lt;/td&gt;
&lt;td&gt;SM2抗量子攻击能力更强&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;效率&lt;/td&gt;
&lt;td&gt;RSA密钥生成慢，加密效率低&lt;/td&gt;
&lt;td&gt;SM2密钥生成速度比RSA快百倍以上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;政策合规&lt;/td&gt;
&lt;td&gt;部分行业禁用非国产算法&lt;/td&gt;
&lt;td&gt;政府、金融、能源等领域强制采用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;密钥管理&lt;/td&gt;
&lt;td&gt;依赖PKI证书体系&lt;/td&gt;
&lt;td&gt;SM9无需证书，简化管理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id="-总结"&gt;💎 &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;国密算法是中国信息安全自主化的战略成果，通过&lt;strong&gt;SM系列算法+ZUC&lt;/strong&gt;的完整生态，实现了从芯片级安全（SM1/SM7）到应用层加密（SM2/SM9）的全覆盖。其高安全性、政策合规性及场景适配性，使其成为金融、政务、物联网等领域的首选标准。随着SM2/SM3/SM4等成为国际标准，国密算法正推动中国密码技术走向全球。&lt;/p&gt;
&lt;h2 id="ecc"&gt;ECC
&lt;/h2&gt;&lt;p&gt;以下是关于**椭圆曲线密码学（Elliptic Curve Cryptography, ECC）**的详细介绍，涵盖其数学原理、安全机制、技术实现及应用场景：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一数学基础"&gt;🔐 &lt;strong&gt;一、数学基础&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;椭圆曲线定义&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;标准方程&lt;/strong&gt;：在有限域 Fp 上，曲线方程为 y2=x3+ax+b，需满足 4a3+27b2=0 以避免奇点（如尖点或自交）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有限域选择&lt;/strong&gt;：常用素数域 GF(p) 或二进制域 GF(2m)，前者适用于通用处理器，后者在硬件实现中更高效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;群运算规则&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;点加法&lt;/strong&gt;：若 P=Q，则 P+Q 为连接 P 和 Q 的直线与曲线的第三交点关于 x 轴的对称点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;倍点&lt;/strong&gt;：若 P=Q，则 2P 为曲线在 P 处切线的另一交点对称点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阿贝尔群&lt;/strong&gt;：曲线上的点与无穷远点 O（单位元）构成群，满足封闭性、结合律和交换律。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心运算：标量乘法&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;计算 Q=kP（点 P 累加 k 次）是单向函数：已知 k 和 P 易求 Q，但已知 Q 和 P 求 k 是&lt;strong&gt;椭圆曲线离散对数问题（ECDLP）&lt;/strong&gt;，计算不可行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-二安全原理"&gt;🛡️ &lt;strong&gt;二、安全原理&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ECDLP的困难性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ECC的安全性完全依赖于ECDLP的难解性。当前最佳算法（如Pollard&amp;rsquo;s Rho）破解256位ECC需 O(n) 时间（n 为基点阶），相当于 2128 次运算，远超实际计算能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥长度优势&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;安全强度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;RSA密钥长度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ECC密钥长度&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;80位&lt;/td&gt;
&lt;td&gt;1024位&lt;/td&gt;
&lt;td&gt;160位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;128位&lt;/td&gt;
&lt;td&gt;3072位&lt;/td&gt;
&lt;td&gt;256位&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;效率对比&lt;/strong&gt;：256位ECC ≈ 3072位RSA安全性，但计算速度快70%，存储和带宽开销更低。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;抗量子威胁&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shor算法可在量子计算机上破解ECDLP，但当前量子设备未达实用规模（需约2000量子比特破解256位ECC）。抗量子替代方案（如基于格的密码）仍在发展中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-三技术实现"&gt;⚙️ &lt;strong&gt;三、技术实现&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥生成&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;私钥 d&lt;/strong&gt;：随机整数，取值范围 [1,n−1]（n 为基点 G 的阶）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公钥 Q&lt;/strong&gt;：计算 Q=d⋅G（标量乘法）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;核心算法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; ECDH（密钥交换）
：
- Alice发送 QA=dA⋅G，Bob发送 QB=dB⋅G。
- 共享密钥 S=dA⋅QB=dB⋅QA=dAdBG。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt; ECDSA（数字签名）
：
- **签名**：生成随机数 k，计算 (r,s)=(x(kG), k−1(H(m)+r⋅d)modn)。
- **验证**：恢复点 P′=s−1H(m)G+s−1rQ，验证 x(P′)=r。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt; ECIES（加密）
：
- 结合对称加密（如AES），用接收方公钥加密会话密钥。
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;参数标准化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 常用曲线
：
- `secp256k1`（比特币）、`P-256`（NIST标准）、`Curve25519`（高效Diffie-Hellman）。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;避免自定义曲线&lt;/strong&gt;：防止弱参数导致安全漏洞（如超奇异曲线易受MOV攻击）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-四应用场景"&gt;🌐 &lt;strong&gt;四、应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;TLS/SSL加密&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;通过ECDHE密钥交换实现前向保密，减少握手延迟（如网站HTTPS）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区块链与数字货币&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;比特币使用&lt;code&gt;secp256k1&lt;/code&gt;生成地址和签名，以太坊采用ECDSA验证交易。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;国密算法（SM2）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;中国商用密码标准，基于ECC实现数字签名、加密和密钥交换，支持金融与电子政务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;物联网与移动设备&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;低功耗设备快速完成加密（如智能家居传感器），节省50%计算资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字身份与供应链&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;去中心化身份验证（自主身份管理）、供应链金融智能合约防篡改。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-五优缺点分析"&gt;⚖️ &lt;strong&gt;五、优缺点分析&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;✅ &lt;strong&gt;短密钥高强度&lt;/strong&gt;：256位=3072位RSA安全性&lt;/td&gt;
&lt;td&gt;❌ &lt;strong&gt;实现复杂&lt;/strong&gt;：需处理有限域运算和点加法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;✅ &lt;strong&gt;低资源消耗&lt;/strong&gt;：适合IoT/移动设备&lt;/td&gt;
&lt;td&gt;❌ &lt;strong&gt;侧信道攻击风险&lt;/strong&gt;：功耗、时序泄露密钥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;✅ &lt;strong&gt;前向保密支持&lt;/strong&gt;：ECDHE更新会话密钥&lt;/td&gt;
&lt;td&gt;❌ &lt;strong&gt;旧系统兼容性差&lt;/strong&gt;：部分设备不支持ECC&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id="-六发展趋势"&gt;🔮 &lt;strong&gt;六、发展趋势&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;抗量子ECC变种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;研究&lt;strong&gt;同源加密&lt;/strong&gt;（Isogeny-based Crypto），利用椭圆曲线同态映射抵抗量子计算。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;硬件加速优化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FPGA/ASIC实现标量乘法（如Curve25519优化后仅0.869ms）。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;标准化推进&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NIST后量子密码标准纳入ECC改进方案（如CRYSTALS-Kyber结合ECC）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-总结-1"&gt;💎 &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;ECC凭借&lt;strong&gt;短密钥、高效率和高安全性&lt;/strong&gt;，已成为现代密码学的核心：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术本质&lt;/strong&gt;：基于ECDLP的数学难题，通过标量乘法实现非对称加密。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实用价值&lt;/strong&gt;：在资源受限场景（区块链、IoT）不可替代，推动国密SM2等自主标准落地。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未来挑战&lt;/strong&gt;：量子威胁推动算法演进，但ECC仍是当前平衡安全与效率的最优解。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ecdlp"&gt;ECDLP
&lt;/h2&gt;&lt;h3 id="定义与数学基础"&gt;定义与数学基础
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;问题定义&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给定椭圆曲线 E 定义在有限域 \mathbb{F}_p 上，基点 P（阶为 n）及曲线上的另一点 Q，ECDLP 要求找到整数 k ∈ [0, n-1] 满足：
[
Q = kP
]
其中 kP 表示点 P 的 k 次标量乘法（即 P + P + ··· + P，共 k 次）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;椭圆曲线的数学结构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;曲线方程：标准形式为 y² = x³ + ax + b (mod p)，需满足判别式 Δ = -16(4a³ + 27b²) ≠ 0 以保证无奇点。&lt;/li&gt;
&lt;li&gt;群结构：曲线上的点与无穷远点 O 构成阿贝尔群，运算规则如下：
&lt;ul&gt;
&lt;li&gt;点加法：若 P ≠ Q，连接 P 和 Q 的直线与曲线交于第三点 R，则 P + Q = -R（对称点）&lt;/li&gt;
&lt;li&gt;倍点：若 P = Q，切线交曲线于另一点 R，则 2P = -R&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有限域上的椭圆曲线：运算均在模 p 下进行，群阶 N ≈ p，且满足 N = p + 1 - t（t 为迹）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="困难性与安全性分析"&gt;困难性与安全性分析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;困难性来源&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算不对称性：
&lt;ul&gt;
&lt;li&gt;正向计算（kP）可在多项式时间内完成&lt;/li&gt;
&lt;li&gt;逆向求解（k）需指数时间，目前无高效算法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;与经典DLP对比：
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;问题类型&lt;/th&gt;
&lt;th&gt;计算复杂度&lt;/th&gt;
&lt;th&gt;密钥长度等价性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;整数分解（RSA）&lt;/td&gt;
&lt;td&gt;亚指数级&lt;/td&gt;
&lt;td&gt;1024位 RSA ≈ 160位 ECC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;有限域DLP（DSA）&lt;/td&gt;
&lt;td&gt;亚指数级&lt;/td&gt;
&lt;td&gt;1024位 DSA ≈ 160位 ECC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ECDLP&lt;/td&gt;
&lt;td&gt;指数级&lt;/td&gt;
&lt;td&gt;160位 ECC = 1024位 RSA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全参数选择&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥长度：推荐使用 256 位以上（如 secp256r1）&lt;/li&gt;
&lt;li&gt;曲线类型：避免使用迹 t=1 的曲线（反常曲线），因其存在 Smart 攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="攻击方法与计算实践"&gt;攻击方法与计算实践
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通用攻击算法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;穷举搜索：
&lt;ul&gt;
&lt;li&gt;复杂度 O(n)&lt;/li&gt;
&lt;li&gt;对 160 位密钥需 2¹⁶⁰ 次运算（不可行）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Baby-step Giant-step：
&lt;ul&gt;
&lt;li&gt;时间与空间复杂度均为 O(√n)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pollard&amp;rsquo;s Rho算法：
&lt;ul&gt;
&lt;li&gt;时间复杂度 O(√n)&lt;/li&gt;
&lt;li&gt;空间复杂度 O(1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特殊曲线攻击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;反常曲线攻击（Smart攻击）：
[
k ≡ \frac{φ_p(pQ)}{φ_p(pP)} \pmod{p}
]
其中 φ_p 为 p-进椭圆对数映射&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他攻击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MOV攻击：将 ECDLP 转化为有限域上的 DLP（仅对超奇异曲线有效）&lt;/li&gt;
&lt;li&gt;侧信道攻击：需硬件级防护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="参数选择与实现优化"&gt;参数选择与实现优化
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全曲线标准&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推荐曲线：
&lt;ul&gt;
&lt;li&gt;NIST P-256&lt;/li&gt;
&lt;li&gt;Curve25519&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;生成元选择：基点 P 的阶应为大素数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;性能优化技术&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标量乘法加速：
&lt;ul&gt;
&lt;li&gt;NAF（非相邻形式）&lt;/li&gt;
&lt;li&gt;预计算表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;硬件加速：使用专用指令集或 FPGA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="应用场景与密码体制"&gt;应用场景与密码体制
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;核心密码协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥交换（ECDH）&lt;/li&gt;
&lt;li&gt;数字签名（ECDSA）：
&lt;ul&gt;
&lt;li&gt;签名生成：(r, s) = (x(kP), k⁻¹(H(m) + r·d) mod n)&lt;/li&gt;
&lt;li&gt;签名验证：恢复点 P&amp;rsquo; = s⁻¹H(m)G + s⁻¹rQ，验证 x(P&amp;rsquo;) = r&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;加密（ECIES）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用领域&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;领域&lt;/th&gt;
&lt;th&gt;应用案例&lt;/th&gt;
&lt;th&gt;ECC优势&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;移动通信&lt;/td&gt;
&lt;td&gt;TLS/SSL 握手优化&lt;/td&gt;
&lt;td&gt;低带宽、高速度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;区块链&lt;/td&gt;
&lt;td&gt;比特币（secp256k1 曲线）&lt;/td&gt;
&lt;td&gt;短签名、高效验证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;物联网&lt;/td&gt;
&lt;td&gt;设备身份认证与密钥分发&lt;/td&gt;
&lt;td&gt;低功耗、小存储空间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="安全挑战与未来趋势"&gt;安全挑战与未来趋势
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;量子计算威胁&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shor算法：256 位 ECC 需约 2000 量子比特破解&lt;/li&gt;
&lt;li&gt;抗量子替代方案：
&lt;ul&gt;
&lt;li&gt;基于格密码（Lattice）&lt;/li&gt;
&lt;li&gt;哈希签名（如 SPHINCS+）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;前沿研究&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同态加密结合&lt;/li&gt;
&lt;li&gt;零知识证明优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="总结"&gt;总结
&lt;/h3&gt;&lt;p&gt;ECDLP 的指数级计算难度使其成为 ECC 安全性的基石。实际应用中需：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规避不安全曲线&lt;/li&gt;
&lt;li&gt;采用标准化参数&lt;/li&gt;
&lt;li&gt;实施物理防护
未来量子计算的威胁推动着后量子密码学的发展，但现阶段 ECC 仍是高效安全的首选方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="kdf"&gt;KDF
&lt;/h2&gt;&lt;p&gt;密钥派生函数（Key Derivation Function, KDF）是密码学中将低熵输入（如密码或共享密钥）转化为高安全性密钥的核心算法。其核心价值在于&lt;strong&gt;增强密钥的随机性、抗攻击能力及适用性&lt;/strong&gt;，广泛应用于加密、认证、密钥交换等场景。以下从原理、算法、应用及实践展开分析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一kdf的核心原理与设计目标"&gt;⚙️ &lt;strong&gt;一、KDF的核心原理与设计目标&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;问题驱动&lt;/strong&gt;
直接使用用户密码作为密钥存在三大风险：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;强度不足&lt;/strong&gt;：短密码易被暴力破解（如字典攻击）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重复性风险&lt;/strong&gt;：相同密码生成相同密钥，降低系统安全性；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;长度不匹配&lt;/strong&gt;：加密算法（如AES-256）需固定长度密钥，而用户输入长度不定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全设计原则&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;加盐（Salt）&lt;/strong&gt;：添加随机盐值（通常16字节），使相同密码生成不同密钥，有效抵抗彩虹表攻击；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迭代计算&lt;/strong&gt;：通过多次哈希迭代（如PBKDF2的1万次），大幅增加暴力破解成本；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内存硬度（Memory-hard）&lt;/strong&gt;：要求大量内存（如Scrypt、Argon2），抵御GPU/ASIC硬件加速；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出均匀性&lt;/strong&gt;：确保密钥在密钥空间均匀分布，避免概率分析漏洞。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-二主流kdf算法对比"&gt;🔬 &lt;strong&gt;二、主流KDF算法对比&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;下表对比了经典与现代KDF的特性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;算法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;核心机制&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;弱点&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PBKDF2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于HMAC，可调迭代次数&lt;/td&gt;
&lt;td&gt;密码存储、WPA2加密&lt;/td&gt;
&lt;td&gt;中等&lt;/td&gt;
&lt;td&gt;易受GPU加速攻击&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Bcrypt&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于Blowfish密钥扩展&lt;/td&gt;
&lt;td&gt;Web应用密码哈希（如Django）&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;内存需求固定，抗GPU有限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Scrypt&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;内存硬设计，需大量RAM&lt;/td&gt;
&lt;td&gt;加密货币（莱特币）、高安全存储&lt;/td&gt;
&lt;td&gt;更高&lt;/td&gt;
&lt;td&gt;资源消耗大，参数配置复杂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Argon2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;抗ASIC/GPU/旁路攻击&lt;/td&gt;
&lt;td&gt;现代密码系统（NIST推荐）&lt;/td&gt;
&lt;td&gt;极高&lt;/td&gt;
&lt;td&gt;新算法，老旧系统兼容性差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HKDF&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提取+扩展两阶段（基于HMAC）&lt;/td&gt;
&lt;td&gt;TLS 1.3、Signal协议&lt;/td&gt;
&lt;td&gt;高（高熵输入）&lt;/td&gt;
&lt;td&gt;不适合直接处理低熵密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SM3-KDF&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于国密SM3哈希，计数器模式&lt;/td&gt;
&lt;td&gt;中国政府/金融系统&lt;/td&gt;
&lt;td&gt;高（符合国密）&lt;/td&gt;
&lt;td&gt;国际认可度低&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：Argon2分为三种变体：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Argon2d&lt;/strong&gt;：抗GPU破解（牺牲侧信道防护）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Argon2i&lt;/strong&gt;：抗侧信道攻击（牺牲GPU抗性）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Argon2id&lt;/strong&gt;：混合模式（平衡两者）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="-三核心应用场景"&gt;⚡ &lt;strong&gt;三、核心应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;密码存储&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流程&lt;/strong&gt;：用户注册时，系统对密码加盐后通过KDF（如Bcrypt）生成哈希值存储；登录时重复此过程验证匹配。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;案例&lt;/strong&gt;：Linux系统密码文件（&lt;code&gt;/etc/shadow&lt;/code&gt;）、1Password早期版本使用PBKDF2。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密钥派生与扩展&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;密钥协商后派生&lt;/strong&gt;：如SM2密钥交换协议中，双方基于共享秘密（椭圆曲线点坐标）通过SM3-KDF生成会话密钥；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密钥分散&lt;/strong&gt;：主密钥→子密钥（如智能卡系统），通过HKDF的扩展阶段实现多密钥生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密密钥生成&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;将用户密码转化为符合加密算法要求的密钥（如PBKDF2生成AES-256密钥）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;国密场景&lt;/strong&gt;：SM2加密算法使用SM3-KDF从共享点派生加密密钥。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-四技术实现示例"&gt;🛠️ &lt;strong&gt;四、技术实现示例&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PBKDF2（Java）&lt;/strong&gt;
生成AES密钥的典型代码：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;import javax.crypto.spec.PBEKeySpec;
import javax.crypto.SecretKeyFactory;
import java.security.SecureRandom;
public class PBKDF2Demo {
public static byte[] deriveKey(String password, byte[] salt, int iterations, int keyLength) throws Exception {
PBEKeySpec spec = new PBEKeySpec(password.toCharArray(), salt, iterations, keyLength);
SecretKeyFactory skf = SecretKeyFactory.getInstance(&amp;#34;PBKDF2WithHmacSHA256&amp;#34;);
return skf.generateSecret(spec).getEncoded(); // 生成AES密钥
}
public static byte[] generateSalt() {
byte[] salt = new byte[16];
new SecureRandom().nextBytes(salt); // 安全随机盐
return salt;
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SM3-KDF（国密标准）&lt;/strong&gt;
工作流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;：种子数据 &lt;code&gt;Z&lt;/code&gt;（如共享密钥）、目标密钥长度 &lt;code&gt;klen&lt;/code&gt;、计数器 &lt;code&gt;ct&lt;/code&gt;（从1开始）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 迭代过程
：
```
T = b'' # 初始化输出
for i in range(1, n+1):
hash_input = Z + OtherInfo + int_to_bytes(i) # 拼接输入
T += sm3_hash(hash_input) # 迭代调用SM3哈希
return T[:klen] # 截取目标长度
```
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id="-五安全实践与挑战"&gt;⚠️ &lt;strong&gt;五、安全实践与挑战&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;参数选择指南&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;迭代次数&lt;/strong&gt;：PBKDF2推荐≥10,000次，Bcrypt工作因子≥12；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;盐值长度&lt;/strong&gt;：至少8字节，推荐16字节（如NIST标准）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内存配置&lt;/strong&gt;：Scrypt需≥16MB内存，Argon2需≥64MB。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;攻击防御&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;侧信道攻击&lt;/strong&gt;：选择Argon2i或恒定时间实现的算法；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;量子威胁&lt;/strong&gt;：KDF本身不抗量子，需结合后量子密码（如NIST PQC标准）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;国密合规性&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;SM3-KDF需遵循《GMT 0003.4-2012》标准，适用于金融、政务系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-总结-2"&gt;💎 &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;KDF作为密码学的“密钥锻造厂”，通过&lt;strong&gt;加盐、迭代、内存硬化&lt;/strong&gt;将脆弱输入转化为强密钥，其选择需权衡安全需求与性能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;通用场景&lt;/strong&gt;：首选Argon2或Scrypt（高内存硬度）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;国密合规&lt;/strong&gt;：强制使用SM3-KDF；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密钥扩展&lt;/strong&gt;：HKDF是TLS等协议的黄金标准。
在量子计算逼近的时代，KDF仍需与后量子算法协同演进，但其在密钥安全链中的基石地位无可替代 🔗。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sm2"&gt;SM2
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://i-blog.csdnimg.cn/blog_migrate/3aeae1eed996828ded38c45c829b345b.png"
loading="lazy"
alt="img"
&gt;&lt;/p&gt;
&lt;p&gt;SM2是中国自主研发的椭圆曲线公钥密码算法（国密算法），由国家密码管理局于2010年发布，2016年成为国家标准（GB/T 32918-2016），2017年纳入ISO/IEC国际标准。其基于椭圆曲线离散对数难题（ECDLP），具备高安全性、高效性和短密钥优势，广泛应用于金融、电子政务、物联网等领域。以下从核心原理到应用实践展开详解：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一算法基础与数学原理"&gt;🔐 一、算法基础与数学原理
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;椭圆曲线数学基础&lt;/strong&gt;
SM2基于有限域上的椭圆曲线方程：
y2≡x3+ax+bmodp
国密推荐参数采用256位素数域，其中：
&lt;ul&gt;
&lt;li&gt;素数 &lt;code&gt;p&lt;/code&gt;：&lt;code&gt;FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000 FFFFFFFF FFFFFFFF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;系数 &lt;code&gt;a&lt;/code&gt;：&lt;code&gt;FFFFFFFE ... FFFFFFFC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;基点 &lt;code&gt;G&lt;/code&gt;：坐标 &lt;code&gt;(x, y)&lt;/code&gt;，阶 &lt;code&gt;n&lt;/code&gt; 为 &lt;code&gt;FFFFFFFE ... 39D54123&lt;/code&gt;。
安全性依赖&lt;strong&gt;ECDLP难题&lt;/strong&gt;​：已知点 &lt;code&gt;P&lt;/code&gt; 和 &lt;code&gt;Q = kP&lt;/code&gt;，求 &lt;code&gt;k&lt;/code&gt; 在计算上不可行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密钥生成&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;私钥 &lt;code&gt;d&lt;/code&gt;：随机数 d∈[1,n−1]&lt;/li&gt;
&lt;li&gt;公钥 &lt;code&gt;P&lt;/code&gt;：通过标量乘法计算 P=d⋅G（椭圆曲线点）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-二核心功能模块"&gt;⚙️ 二、核心功能模块
&lt;/h3&gt;&lt;p&gt;SM2包含三大功能，均结合SM3哈希和KDF密钥派生函数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数字签名&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;签名生成&lt;/strong&gt;：对消息哈希值 &lt;code&gt;e&lt;/code&gt; 计算签名 &lt;code&gt;(r, s)&lt;/code&gt;，使用随机数 &lt;code&gt;k&lt;/code&gt; 和私钥 &lt;code&gt;d&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验签&lt;/strong&gt;：通过公钥验证 &lt;code&gt;r ≡ (e + x₁) mod n&lt;/code&gt;，确保数据完整性和身份认证。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;公钥加密&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;加密流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成随机数 &lt;code&gt;k&lt;/code&gt;，计算临时公钥 C1=k⋅G&lt;/li&gt;
&lt;li&gt;计算共享点 S=k⋅PB=(x2,y2)&lt;/li&gt;
&lt;li&gt;派生密钥 t=KDF(x2∥y2,len(M))&lt;/li&gt;
&lt;li&gt;生成密文 C2=M⊕t 和校验值 C3=Hash(x2∥M∥y2)&lt;/li&gt;
&lt;li&gt;输出密文 C=C1∥C3∥C2（或 &lt;code&gt;C1C2C3&lt;/code&gt; 格式）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;解密流程&lt;/strong&gt;：反向计算共享点 S=dB⋅C1，恢复明文并校验 &lt;code&gt;C3&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥交换&lt;/strong&gt;
基于改进的ECDH协议，双方通过两轮交互生成共享密钥：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;临时密钥交换：U=rA(rB⋅G+PB) 与 U′=rB(rA⋅G+PA)&lt;/li&gt;
&lt;li&gt;通过KDF处理坐标生成会话密钥。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-三安全性优势与抗攻击能力"&gt;🛡️ 三、安全性优势与抗攻击能力
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;SM2 (256位)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;RSA-3072&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;安全基础&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ECDLP难题&lt;/td&gt;
&lt;td&gt;大整数分解难题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;抗量子攻击&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;密钥长度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;256位&lt;/td&gt;
&lt;td&gt;3072位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;签名速度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.98ms (FPGA)&lt;/td&gt;
&lt;td&gt;3.2ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;存储占用&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抗攻击设计&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;侧信道防护：盲化标量乘法、随机化NAF窗口防御功耗分析。&lt;/li&gt;
&lt;li&gt;完整性校验：&lt;code&gt;C3&lt;/code&gt; 哈希值防止密文篡改（如中间人攻击）。&lt;/li&gt;
&lt;li&gt;弱曲线防御：强制验证公共参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-四典型应用场景"&gt;🌐 四、典型应用场景
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;金融支付&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;银行U盾数字签名、交易数据加密（如银联系统）。&lt;/li&gt;
&lt;li&gt;区块链身份认证（如FISCO BCOS公链）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电子政务&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;公文加密传输、公务员身份认证（SM2证书替代RSA）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;物联网安全&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;设备间密钥协商（如智能家居指令加密），适应低功耗设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTPS通信&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;国密SSL证书：服务器身份认证（SM2公钥） + 密钥协商（SM2） + 数据加密（SM4）。
&lt;em&gt;示例流程：客户端用服务器公钥加密预主密钥 → 协商主密钥 → SM4加密传输数据。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-五实现要点与开发建议"&gt;⚠️ 五、实现要点与开发建议
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;随机数安全&lt;/strong&gt;
加密随机数 &lt;code&gt;k&lt;/code&gt; 必须一次性且不可预测，否则私钥可能泄露。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式兼容性&lt;/strong&gt;
密文格式需统一：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C1C3C2&lt;/code&gt;：国密标准（政务/金融系统）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C1C2C3&lt;/code&gt;：国际兼容格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能优化&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;硬件&lt;/strong&gt;：FPGA流水线设计（标量乘 &amp;lt; 1ms）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;软件&lt;/strong&gt;：Bouncy Castle库（Java）、OpenSSL引擎（C++），预计算基点加速。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合规性要求&lt;/strong&gt;
遵循GM/T 0009—2023新标准（2024年6月实施），严格验证公钥曲线参数。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-六总结"&gt;💎 六、总结
&lt;/h3&gt;&lt;p&gt;SM2通过&lt;strong&gt;椭圆曲线数学框架&lt;/strong&gt; + &lt;strong&gt;组合式安全设计&lt;/strong&gt;（密钥协商+对称加密+哈希校验），实现了自主可控的高强度加密。其256位密钥安全性超越RSA-3072，资源效率优势显著，成为金融、政务、物联网等领域的核心安全底座。未来需持续优化抗量子攻击能力，并推动国际标准适配。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：完整代码实现参考Bouncy Castle库（Java）或OpenSSL国密引擎（C++）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="sm2cipher"&gt;SM2Cipher
&lt;/h2&gt;&lt;p&gt;SM2Cipher 是国密算法 SM2 中用于加密和解密操作的核心格式规范，定义了密文数据的结构、生成方式及解析规则。其核心设计基于椭圆曲线密码学（ECC），通过组合曲线点坐标、密文数据和验证值实现安全加密。以下是其详细解析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-1-核心组成结构"&gt;🔐 &lt;strong&gt;1. 核心组成结构&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;SM2Cipher 的密文由三部分按特定顺序组合而成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C1&lt;/strong&gt;：椭圆曲线上的点（&lt;code&gt;k·G&lt;/code&gt;），由随机数 &lt;code&gt;k&lt;/code&gt; 与基点 &lt;code&gt;G&lt;/code&gt; 计算生成，用于传递加密会话的临时公钥。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C2&lt;/strong&gt;：实际密文数据，由明文与派生密钥（通过 KDF 函数从共享密钥 &lt;code&gt;k·P_B&lt;/code&gt; 生成）异或运算得到。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C3&lt;/strong&gt;：完整性验证值，通常为 SM3 哈希算法对共享密钥坐标（&lt;code&gt;x₂‖y₂&lt;/code&gt;）和明文的计算结果，用于解密时校验数据完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：格式顺序存在两种主流模式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;模式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;顺序&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C1C3C2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标准国密格式&lt;/td&gt;
&lt;td&gt;中国政务、金融系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C1C2C3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;兼容国际标准&lt;/td&gt;
&lt;td&gt;跨平台应用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="-2-加密与解密流程"&gt;⚙️ &lt;strong&gt;2. 加密与解密流程&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="加密过程"&gt;&lt;strong&gt;加密过程&lt;/strong&gt;：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;生成随机数 &lt;code&gt;k&lt;/code&gt;，计算 &lt;code&gt;C1 = k·G&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用接收方公钥 &lt;code&gt;P_B&lt;/code&gt; 计算共享点 &lt;code&gt;S = k·P_B&lt;/code&gt;，提取坐标 &lt;code&gt;(x₂, y₂)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;通过 KDF 函数派生密钥 &lt;code&gt;t = KDF(x₂‖y₂)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;生成密文 &lt;code&gt;C2 = M ⊕ t&lt;/code&gt;（&lt;code&gt;M&lt;/code&gt; 为明文）。&lt;/li&gt;
&lt;li&gt;计算哈希 &lt;code&gt;C3 = Hash(x₂‖M‖y₂)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;输出密文：按选定模式（如 &lt;code&gt;C1C3C2&lt;/code&gt;）拼接。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="解密过程"&gt;&lt;strong&gt;解密过程&lt;/strong&gt;：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;解析 &lt;code&gt;C1&lt;/code&gt; 并验证其在曲线上。&lt;/li&gt;
&lt;li&gt;用私钥 &lt;code&gt;d_B&lt;/code&gt; 计算共享点 &lt;code&gt;S' = d_B·C1&lt;/code&gt;，得到 &lt;code&gt;(x₂', y₂')&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;派生密钥 &lt;code&gt;t' = KDF(x₂'‖y₂')&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;解密明文 &lt;code&gt;M' = C2 ⊕ t'&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;重新计算 &lt;code&gt;C3' = Hash(x₂'‖M'‖y₂')&lt;/code&gt;，与输入 &lt;code&gt;C3&lt;/code&gt; 比对，不一致则拒绝。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-3-应用场景"&gt;🌐 &lt;strong&gt;3. 应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安全通信&lt;/strong&gt;：用于加密即时消息、邮件（如微信小程序安全键盘的密码加密）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据保护&lt;/strong&gt;：在物联网（IoT）中加密设备间传输的敏感数据（如智能家居指令）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混合加密系统&lt;/strong&gt;：与对称算法（如 SM4）结合，由 SM2Cipher 加密会话密钥，提升效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-4-技术特点"&gt;🔧 &lt;strong&gt;4. 技术特点&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;非对称安全性&lt;/strong&gt;：基于椭圆曲线离散对数问题（ECDLP），256 位密钥强度相当于 RSA-3072。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抗量子计算&lt;/strong&gt;：优于传统 RSA 算法，适合长期安全需求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式灵活性&lt;/strong&gt;：支持 ASN.1 编码（如小程序中的 &lt;code&gt;DER&lt;/code&gt; 格式），便于跨系统兼容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源友好&lt;/strong&gt;：计算量低于 RSA，适合嵌入式设备和低功耗场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-5-实现注意事项"&gt;⚠️ &lt;strong&gt;5. 实现注意事项&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;随机数质量&lt;/strong&gt;：&lt;code&gt;k&lt;/code&gt; 的随机性直接影响安全性，需使用密码学安全 RNG。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式一致性&lt;/strong&gt;：加密/解密双方需约定相同的结构模式（如 &lt;code&gt;C1C3C2&lt;/code&gt; 或 &lt;code&gt;C1C2C3&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;侧信道防护&lt;/strong&gt;：实现时需防御计时攻击、功耗分析等（如盲化标量运算）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-总结-3"&gt;💎 &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;SM2Cipher 是 SM2 算法中定义密文结构的核心规范，通过 &lt;code&gt;C1&lt;/code&gt;、&lt;code&gt;C2&lt;/code&gt;、&lt;code&gt;C3&lt;/code&gt; 三部分协同实现数据加密、完整性和身份验证。其高效性和安全性使其在金融、物联网、电子政务等领域广泛应用。开发者需注意格式兼容性及随机数安全，可借助 Bouncy Castle 等库简化实现。&lt;/p&gt;
&lt;h2 id="加密公钥"&gt;加密公钥
&lt;/h2&gt;&lt;p&gt;在 SM2 公钥加密算法中，&lt;strong&gt;使用接收方的公钥&lt;/strong&gt;进行加密。以下是详细说明：&lt;/p&gt;
&lt;h3 id="-1-加密方发送方的操作"&gt;🔑 1. &lt;strong&gt;加密方（发送方）的操作&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;获取接收方公钥&lt;/strong&gt;：发送方首先需要获取接收方的 SM2 公钥（记为 Pb），这是一个公开的椭圆曲线点（如 Pb=db⋅G，其中 db 为接收方私钥，G 为椭圆曲线基点）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加密过程&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成随机数 k∈[1,n−1]（n 为曲线阶数）。&lt;/li&gt;
&lt;li&gt;计算临时公钥 C1=k⋅G，并作为密文第一部分。&lt;/li&gt;
&lt;li&gt;用接收方公钥计算共享点 S=k⋅Pb=(x2,y2)。&lt;/li&gt;
&lt;li&gt;通过密钥派生函数（KDF）生成对称密钥 t=KDF(x2∥y2,len(M))（M 为明文）。&lt;/li&gt;
&lt;li&gt;加密明文：C2=M⊕t（异或运算）。&lt;/li&gt;
&lt;li&gt;生成完整性校验值 C3=Hash(x2∥M∥y2)（常用 SM3 哈希算法）。&lt;/li&gt;
&lt;li&gt;最终密文为 C=C1∥C3∥C2。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="-2-解密方接收方的操作"&gt;🔓 2. &lt;strong&gt;解密方（接收方）的操作&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用自身私钥&lt;/p&gt;
&lt;p&gt;：接收方用自己的私钥&lt;/p&gt;
&lt;p&gt;db&lt;/p&gt;
&lt;p&gt;解密密文：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从密文中提取 C1，计算共享点 S′=db⋅C1（与发送方的 S 相同，因 db⋅(k⋅G)=k⋅(db⋅G)=k⋅Pb)。&lt;/li&gt;
&lt;li&gt;用相同 KDF 生成密钥 t′，解密 M′=C2⊕t′。&lt;/li&gt;
&lt;li&gt;校验 C3 是否等于 Hash(x2∥M′∥y2)，验证数据完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="-3-核心原则"&gt;💎 3. &lt;strong&gt;核心原则&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;公钥用于加密，私钥用于解密&lt;/strong&gt;：发送方&lt;strong&gt;仅使用接收方的公钥&lt;/strong&gt;，确保只有接收方能解密（因私钥不公开）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前向保密性&lt;/strong&gt;：每次加密使用随机数 k，即使同一明文多次加密结果也不同，增强安全性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="-总结-4"&gt;⚖️ &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;SM2 公钥加密中，&lt;strong&gt;发送方必须使用接收方的公钥&lt;/strong&gt;进行加密，接收方则用&lt;strong&gt;自身私钥&lt;/strong&gt;解密。这种机制保证了数据的机密性（仅接收方可解密）和完整性（通过哈希校验），广泛应用于政务、金融等领域的国产化密码解决方案&lt;/p&gt;
&lt;h2 id="cipherspi"&gt;CipherSpi
&lt;/h2&gt;&lt;p&gt;CipherSpi 是 Java 密码体系结构（JCA）中用于实现加密算法的&lt;strong&gt;服务提供者接口（SPI）&lt;/strong&gt;，属于 &lt;code&gt;javax.crypto&lt;/code&gt; 包的核心抽象类。它为开发者提供了扩展 Java 原生加密能力的底层框架，允许自定义或适配第三方加密算法（如国密 SM2/SM3/SM4）。以下是其详细解析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-1-核心定位与设计目的"&gt;🔐 &lt;strong&gt;1. 核心定位与设计目的&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SPI 机制&lt;/strong&gt;：&lt;code&gt;CipherSpi&lt;/code&gt; 是 &lt;code&gt;Cipher&lt;/code&gt; 类的底层实现接口。当应用程序调用 &lt;code&gt;Cipher.getInstance(&amp;quot;算法/模式/填充&amp;quot;)&lt;/code&gt; 时，JCA 框架会动态加载并实例化对应的 &lt;code&gt;CipherSpi&lt;/code&gt; 子类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作用&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封装加密/解密的&lt;strong&gt;核心算法逻辑&lt;/strong&gt;（如 SM2 非对称加密、AES 对称加密）。&lt;/li&gt;
&lt;li&gt;实现&lt;strong&gt;多模式支持&lt;/strong&gt;（如 CBC、ECB）和&lt;strong&gt;填充方案&lt;/strong&gt;（如 PKCS5Padding）。&lt;/li&gt;
&lt;li&gt;提供&lt;strong&gt;密钥管理&lt;/strong&gt;和&lt;strong&gt;参数配置&lt;/strong&gt;的抽象方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-2-核心方法与工作流程"&gt;⚙️ &lt;strong&gt;2. 核心方法与工作流程&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;CipherSpi&lt;/code&gt; 的子类需实现以下关键方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始化方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;engineInit(int opmode, Key key, SecureRandom random)&lt;/code&gt;
用密钥和随机源初始化加密模式（&lt;code&gt;opmode&lt;/code&gt; 包括 &lt;code&gt;ENCRYPT_MODE&lt;/code&gt;、&lt;code&gt;DECRYPT_MODE&lt;/code&gt; 等）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;扩展版本支持算法参数（如 IV 向量）：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;engineInit(int opmode, Key key, AlgorithmParameters params, SecureRandom random)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据分块处理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;engineUpdate(byte[] input, int offset, int len)&lt;/code&gt;：处理部分数据流，返回中间密文/明文。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;engineDoFinal(byte[] input, int offset, int len)&lt;/code&gt;：结束多部分操作，返回最终结果并重置 cipher 状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;辅助功能方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;engineGetBlockSize()&lt;/code&gt;：返回算法块大小（如 AES 为 16 字节）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;engineGetOutputSize(int inputLen)&lt;/code&gt;：预测输出缓冲区大小，避免溢出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;engineSetMode(String mode)&lt;/code&gt; / &lt;code&gt;engineSetPadding(String padding)&lt;/code&gt;：动态配置工作模式和填充方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-3-算法扩展机制"&gt;🧩 &lt;strong&gt;3. 算法扩展机制&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转换字符串解析&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Cipher.getInstance(&amp;#34;DES/CBC/PKCS5Padding&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;的解析遵循分层匹配规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优先匹配完整三元组 &lt;code&gt;算法/模式/填充&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;若失败，依次尝试 &lt;code&gt;算法/模式&lt;/code&gt; → &lt;code&gt;算法//填充&lt;/code&gt; → &lt;code&gt;算法&lt;/code&gt;，并调用 &lt;code&gt;engineSetMode&lt;/code&gt;/&lt;code&gt;engineSetPadding&lt;/code&gt; 补全配置。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;提供者注册&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;p&gt;加密库（如 Bouncy Castle）需在&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Provider
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;类中声明属性，例如：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Cipher.SM2 = org.bouncycastle.jcajce.provider.asymmetric.ec.SM2CipherSpi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;支持动态加载子类。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-4-核心方法实现示例"&gt;⚡ &lt;strong&gt;4. 核心方法实现示例&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;以 &lt;strong&gt;SM4 算法&lt;/strong&gt;的 &lt;code&gt;engineDoFinal&lt;/code&gt; 为例：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;protected byte[] engineDoFinal(byte[] input, int offset, int len) {
// 1. 处理剩余数据块
byte[] block = processBlock(input, offset, len);
// 2. 应用填充方案（如 PKCS7）
byte[] padded = applyPadding(block);
// 3. 执行加密/解密
byte[] result = cipherCore(padded);
// 4. 重置内部状态
reset();
return result;
}
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h3 id="-5-开发自定义-cipherspi-的步骤"&gt;📦 &lt;strong&gt;5. 开发自定义 CipherSpi 的步骤&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;继承 &lt;code&gt;CipherSpi&lt;/code&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;public class MyCipherSpi extends CipherSpi {
// 实现所有抽象方法
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;注册到 JCA 提供者&lt;/strong&gt;：
在自定义 &lt;code&gt;Provider&lt;/code&gt; 类的构造函数中添加：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;put(&amp;#34;Cipher.MYALG&amp;#34;, MyCipherSpi.class.getName());
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用程序调用&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Cipher cipher = Cipher.getInstance(&amp;#34;MYALG&amp;#34;, &amp;#34;MyProvider&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-6-关键注意事项"&gt;⚠️ &lt;strong&gt;6. 关键注意事项&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;线程安全&lt;/strong&gt;：&lt;code&gt;CipherSpi&lt;/code&gt; 实例可能被多线程共享，需确保内部状态机同步。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能优化&lt;/strong&gt;：避免在 &lt;code&gt;engineUpdate&lt;/code&gt;/&lt;code&gt;engineDoFinal&lt;/code&gt; 中频繁创建缓冲区，建议复用对象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合规性&lt;/strong&gt;：若实现国密算法（如 SM4），需通过国家密码管理局的合规检测。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-7-与国密算法的结合"&gt;🌐 &lt;strong&gt;7. 与国密算法的结合&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bouncy Castle 实现参考&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SM2 位于 &lt;code&gt;org.bouncycastle.jcajce.provider.asymmetric.ec.SM2CipherSpi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过重写 &lt;code&gt;engineInit&lt;/code&gt; 支持 SM2 公钥加密，并在 &lt;code&gt;engineDoFinal&lt;/code&gt; 中生成 SM3 摘要作为完整性校验值。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-总结-5"&gt;💎 &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;CipherSpi&lt;/code&gt; 是 JCA 中&lt;strong&gt;连接算法实现与应用层&lt;/strong&gt;的桥梁，通过抽象方法强制约定加密服务的底层行为。开发者可通过扩展此接口，无缝集成自定义或国密算法，同时受益于 Java 标准化的密钥管理、随机数生成等基础设施。其设计充分体现了 &lt;strong&gt;“开闭原则”&lt;/strong&gt;（对扩展开放，对修改封闭），是 Java 安全生态的核心基石之一。&lt;/p&gt;
&lt;h2 id="openssl"&gt;OpenSSL
&lt;/h2&gt;&lt;p&gt;OpenSSL 是一个开源的&lt;strong&gt;加密工具包&lt;/strong&gt;，提供全面的安全通信功能，广泛应用于网络加密、证书管理、数据加密等领域。以下从核心功能、技术架构、应用场景及实践操作等方面展开详细介绍：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一核心功能与组成"&gt;🔐 &lt;strong&gt;一、核心功能与组成&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;加密算法库（Libcrypto）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对称加密&lt;/strong&gt;：支持 AES（128/192/256 位）、DES、3DES、Blowfish 等，适用于高效加密大文件或网络数据流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 非对称加密
：
- RSA：用于密钥交换和数字签名。
- ECC（椭圆曲线加密）：同等安全强度下密钥更短（如 256 位 ECC ≈ 3072 位 RSA），适合移动设备。
- DH（Diffie-Hellman）：密钥交换协议。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;哈希与摘要算法&lt;/strong&gt;：支持 SHA-256、SHA-512（安全推荐）、MD5（已不推荐）、RIPEMD 等，用于数据完整性校验。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全协议库（Libssl）&lt;/strong&gt;
实现 ​&lt;strong&gt;SSL/TLS 协议&lt;/strong&gt;，解决三大核心问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;身份验证&lt;/strong&gt;：通过数字证书验证通信方身份（如 HTTPS 服务器证书）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密钥交换&lt;/strong&gt;：协商对称加密密钥（如 TLS 握手阶段使用 RSA 或 ECDH 交换密钥）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据加密与完整性&lt;/strong&gt;：使用对称加密（如 AES-GCM）和哈希校验保护传输数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;命令行工具&lt;/strong&gt;
提供终端操作接口，覆盖常见任务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成密钥：&lt;code&gt;openssl genpkey -algorithm RSA -out key.pem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;证书管理：生成 CSR、自签名证书（&lt;code&gt;openssl req&lt;/code&gt;）、证书校验（&lt;code&gt;openssl x509 -text&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;文件加密：&lt;code&gt;openssl enc -aes-256-cbc -in file.txt -out encrypted.bin&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;调试 TLS 连接：&lt;code&gt;openssl s_client -connect example.com:443&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-二技术架构与特性"&gt;⚙️ &lt;strong&gt;二、技术架构与特性&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Engine 机制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;硬件加速集成&lt;/strong&gt;：支持第三方加密设备（如 Intel QAT），提升加解密性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态加载&lt;/strong&gt;：通过代码绑定引擎，实现算法扩展（示例代码见）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;异步操作模式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非阻塞 SSL 握手（&lt;code&gt;SSL_MODE_ASYNC&lt;/code&gt;），适用于高并发场景（如 Nginx 配置 &lt;code&gt;ssl_async on&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;证书与 PKI 管理&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;支持 X.509 标准证书，涵盖生成、签名、吊销全流程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自签名证书生成示例：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;openssl genrsa -out server.key 2048
openssl req -new -key server.key -out server.csr
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨平台与兼容性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 Linux、Windows、macOS 及嵌入式系统，提供统一 API（如 C 语言头文件 &lt;code&gt;openssl/ssl.h&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-三主要应用场景"&gt;🌐 &lt;strong&gt;三、主要应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTTPS 网站加密&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;为 Apache/Nginx 提供 TLS 支持，确保数据传输机密性（如电商、网银）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电子邮件安全&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;通过 S/MIME 协议加密邮件内容或添加数字签名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VPN 与远程访问&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;OpenVPN 依赖 OpenSSL 实现隧道加密。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件与数据库加密&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;加密敏感文件（如 &lt;code&gt;openssl enc&lt;/code&gt;），保护数据库存储内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区块链与物联网&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;节点通信加密（如区块链交易）、设备身份认证（ECC 轻量级特性适用）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-四实践操作与最佳实践"&gt;🛠️ &lt;strong&gt;四、实践操作与最佳实践&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装与配置&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Linux（Ubuntu）&lt;/strong&gt;：&lt;code&gt;sudo apt install libssl-dev&lt;/code&gt;（开发库） + &lt;code&gt;openssl&lt;/code&gt;（命令行工具）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;：建议使用官方预编译版本或 Linux 子系统（原生 CMD 兼容性有限）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;常用命令示例&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;命令示例&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;生成随机密钥&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openssl rand -hex 32 &amp;gt; key.bin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;计算文件哈希&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openssl sha256 file.zip&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RSA 加密文件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openssl rsautl -encrypt -pubin -inkey pub.pem -in data.txt -out enc.bin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;调试 TLS 连接&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openssl s_client -connect github.com:443 -servername github.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全最佳实践&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;密钥管理&lt;/strong&gt;：使用强密码保护私钥（&lt;code&gt;-passout pass:xxx&lt;/code&gt;），定期轮换。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议配置&lt;/strong&gt;：禁用老旧协议（如 SSLv3），优先使用 TLSv1.3（更高效安全）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书更新&lt;/strong&gt;：监控有效期，避免服务中断（如 Let’s Encrypt 证书 90 天有效期）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-五历史事件与注意事项"&gt;⚠️ &lt;strong&gt;五、历史事件与注意事项&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Heartbleed 漏洞（2014）&lt;/strong&gt;：OpenSSL 内存泄露漏洞，影响全球 90% HTTPS 网站，推动代码审计强化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;版本选择&lt;/strong&gt;：推荐 OpenSSL 3.x（长期支持版），避免使用已停更的 1.0.x 系列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发注意事项&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C 语言调用时需处理内存及错误码（如 &lt;code&gt;ERR_print_errors_fp&lt;/code&gt; 输出错误）。&lt;/li&gt;
&lt;li&gt;Windows 环境建议通过 WSL 或 MinGW 使用，避免 CMD 兼容性问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-总结-6"&gt;💎 &lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;OpenSSL 作为互联网安全基础设施的核心，通过算法库、协议库和命令行工具三位一体，解决了密钥交换、身份认证与数据加密等核心问题。其开源性、跨平台性及活跃社区（如 GitHub 和邮件列表更新）使其成为开发者构建安全系统的首选。&lt;strong&gt;推荐场景&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开发者&lt;/strong&gt;：集成 libssl 实现 TLS 通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运维人员&lt;/strong&gt;：命令行管理证书与密钥。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全团队&lt;/strong&gt;：定期更新版本并扫描漏洞（如 CVE 跟踪）。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资源：&lt;a class="link" href="https://www.openssl.org/docs/" target="_blank" rel="noopener"
&gt;官方文档&lt;/a&gt;、&lt;a class="link" href="https://tools.ietf.org/html/rfc8446" target="_blank" rel="noopener"
&gt;RFC 8446 (TLSv1.3)&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="安装-openssl"&gt;安装 OpenSSL
&lt;/h2&gt;&lt;p&gt;LDFLAGS（Linker Flags）是编译过程中传递给&lt;strong&gt;链接器（Linker）&lt;/strong&gt; 的参数集合，用于控制目标文件如何链接成最终的可执行文件或库。它在不同编程语言和工具链中均有应用，核心作用是&lt;strong&gt;指导链接阶段的内存布局、符号解析和外部依赖处理&lt;/strong&gt;。以下是其核心要点解析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一基本定义与作用"&gt;🔧 &lt;strong&gt;一、基本定义与作用&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;链接器功能&lt;/strong&gt;
链接器负责将编译后的多个目标文件（&lt;code&gt;.o&lt;/code&gt; 或 &lt;code&gt;.obj&lt;/code&gt;）合并，解析符号引用（如函数和变量地址），并关联外部库（如动态库 &lt;code&gt;.so&lt;/code&gt; 或静态库 &lt;code&gt;.a&lt;/code&gt;）。LDFLAGS 通过命令行参数精准控制这一过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;典型使用场景&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;指定库文件的搜索路径（&lt;code&gt;-L/path/to/libs&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;显式链接特定库（&lt;code&gt;-lssl&lt;/code&gt; 链接 OpenSSL）。&lt;/li&gt;
&lt;li&gt;控制符号表与调试信息（&lt;code&gt;-s&lt;/code&gt; 省略符号表以减小体积）。&lt;/li&gt;
&lt;li&gt;设置入口地址（&lt;code&gt;-e entry_point&lt;/code&gt;）或内存布局（嵌入式开发中常见）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-二在-go-语言中的特殊应用"&gt;⚙️ &lt;strong&gt;二、在 Go 语言中的特殊应用&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;在 Go 的 &lt;code&gt;go build&lt;/code&gt; 命令中，&lt;code&gt;-ldflags&lt;/code&gt; 用于&lt;strong&gt;动态注入编译时信息&lt;/strong&gt;（如版本号、构建时间），无需修改源代码：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;go build -ldflags=&amp;#34;-X &amp;#39;main.Version=1.0.0&amp;#39; -s -w&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-X&lt;/code&gt; 注入变量&lt;/strong&gt;：覆盖包级字符串变量（如 &lt;code&gt;main.Version&lt;/code&gt;），常用于嵌入 Git 提交哈希或版本号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;-s&lt;/code&gt;/&lt;code&gt;-w&lt;/code&gt; 优化体积&lt;/strong&gt;：移除符号表和调试信息，减少二进制大小（生产环境常用）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态值示例&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;go build -ldflags=&amp;#34;-X &amp;#39;app/build.User=$(id -un)&amp;#39; -X &amp;#39;app/build.Time=$(date)&amp;#39;&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h3 id="-三在-cc-等原生语言中的应用"&gt;🖥️ &lt;strong&gt;三、在 C/C++ 等原生语言中的应用&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;库路径与依赖管理&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;gcc main.c -o app -L/opt/homebrew/lib -lssl -lcrypto
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;：添加库搜索路径（如 Homebrew 的 OpenSSL 路径 &lt;code&gt;/opt/homebrew/opt/openssl@3/lib&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：链接指定库（如 &lt;code&gt;-lcrypto&lt;/code&gt; 链接加密库）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;嵌入式开发定制&lt;/strong&gt;
在 STM32/GD32 等嵌入式平台中，LDFLAGS 结合&lt;strong&gt;链接描述文件（.ldf）​&lt;/strong&gt;​ 定义内存分段：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;MEMORY {
FLASH (rx) : ORIGIN = 0x08000000, LENGTH = 512K
RAM (rwx) : ORIGIN = 0x20000000, LENGTH = 128K
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过 &lt;code&gt;-T script.ld&lt;/code&gt; 指定自定义布局，控制代码/数据的物理地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-四高级用法"&gt;⚡️ &lt;strong&gt;四、高级用法&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始化非基本类型变量（Go）&lt;/strong&gt;
通过 JSON 序列化注入结构体或切片：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;go build -ldflags=&amp;#34;-X &amp;#39;main.Config={\&amp;#34;Name\&amp;#34;:\&amp;#34;Alice\&amp;#34;,\&amp;#34;Age\&amp;#34;:30}&amp;#39;&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;需确保 JSON 格式正确，避免解析失败。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;符号保留与消除&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-Wl,--keep-symbol=sym&lt;/code&gt;（C/C++）或 &lt;code&gt;-keep&lt;/code&gt;（专用链接器）保留关键符号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ELIMINATE()&lt;/code&gt;（.ldf 文件）移除未引用代码段，优化体积。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-五使用建议"&gt;💎 &lt;strong&gt;五、使用建议&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;优先级管理&lt;/strong&gt;：在 PATH 环境变量中确保自定义库路径优先于系统路径（如 Homebrew 的 &lt;code&gt;/opt/homebrew/bin&lt;/code&gt;需置前）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;跨平台兼容&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 需替换 &lt;code&gt;$(cmd)&lt;/code&gt; 为 PowerShell 等效命令。&lt;/li&gt;
&lt;li&gt;Go 的 &lt;code&gt;-ldflags&lt;/code&gt; 要求变量为&lt;strong&gt;包级字符串&lt;/strong&gt;（非常量、非函数返回值）。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;调试与生产平衡&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发阶段保留调试信息（禁用 &lt;code&gt;-s -w&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;生产环境启用优化，缩减体积并隐藏敏感符号。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="总结-1"&gt;&lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;LDFLAGS 是链接阶段的“控制中枢”：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🔗 &lt;strong&gt;基础场景&lt;/strong&gt;：解决库路径、依赖链接、内存布局问题；&lt;/li&gt;
&lt;li&gt;🏷️ &lt;strong&gt;高级场景&lt;/strong&gt;：动态注入元数据（Go）、定制嵌入式内存；&lt;/li&gt;
&lt;li&gt;⚖️ &lt;strong&gt;权衡建议&lt;/strong&gt;：调试信息保留 vs. 生产环境精简。
掌握其用法可显著提升构建流程的灵活性与产物的可维护性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id="构建-openjdk"&gt;构建 OpenJDK
&lt;/h2&gt;&lt;p&gt;以下是对您提供的 Homebrew 安装 &lt;code&gt;openjdk@17&lt;/code&gt; 后提示信息的逐条解析，结合 macOS 系统特性和 Homebrew 的设计逻辑：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-1-符号链接的必要性"&gt;🔧 1. &lt;strong&gt;符号链接的必要性&lt;/strong&gt;
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;sudo ln -sfn /opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：在 macOS 系统中，系统级工具（如 &lt;code&gt;/usr/libexec/java_home&lt;/code&gt;）会扫描 &lt;code&gt;/Library/Java/JavaVirtualMachines/&lt;/code&gt; 目录来识别已安装的 JDK。此命令通过创建&lt;strong&gt;符号链接&lt;/strong&gt;（软链接），将 Homebrew 安装的 JDK 伪装成系统标准路径下的 JDK，使其能被系统工具识别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参数解析&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;：创建符号链接（非硬链接）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：强制覆盖已有链接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：避免递归链接目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-2-keg-only-的含义"&gt;⚠️ 2. &lt;strong&gt;keg-only 的含义&lt;/strong&gt;
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;openjdk@17 is keg-only, which means it was not symlinked into /opt/homebrew&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原因&lt;/strong&gt;：Homebrew 为避免与 macOS 自带或其他版本的 JDK 冲突，不会自动将 &lt;code&gt;openjdk@17&lt;/code&gt; 链接到全局路径（如 &lt;code&gt;/usr/local/bin&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响&lt;/strong&gt;：若不手动创建符号链接或配置环境变量，系统无法直接调用此 JDK。这是 Homebrew 管理多版本软件的安全策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-3-path-环境变量配置"&gt;⚙️ 3. &lt;strong&gt;PATH 环境变量配置&lt;/strong&gt;
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;echo &amp;#39;export PATH=&amp;#34;/opt/homebrew/opt/openjdk@17/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：将 JDK 的 &lt;code&gt;bin&lt;/code&gt; 目录（包含 &lt;code&gt;java&lt;/code&gt;、&lt;code&gt;javac&lt;/code&gt; 等命令）添加到 &lt;code&gt;PATH&lt;/code&gt; 环境变量&lt;strong&gt;最前面&lt;/strong&gt;，确保终端优先使用此 JDK 而非系统默认版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需重启终端或执行 &lt;code&gt;source ~/.zshrc&lt;/code&gt; 生效。&lt;/li&gt;
&lt;li&gt;若使用 Bash，应改为 &lt;code&gt;~/.bash_profile&lt;/code&gt; 或 &lt;code&gt;~/.bashrc&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-4-编译器头文件设置可选"&gt;🛠️ 4. &lt;strong&gt;编译器头文件设置（可选）&lt;/strong&gt;
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;export CPPFLAGS=&amp;#34;-I/opt/homebrew/opt/openjdk@17/include&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：为 C/C++ 编译器（如 &lt;code&gt;gcc&lt;/code&gt;、&lt;code&gt;clang&lt;/code&gt;）添加头文件搜索路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：需编译依赖 JNI（Java Native Interface）的本地代码时，此变量确保编译器能找到 JDK 的 &lt;code&gt;jni.h&lt;/code&gt;等头文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用建议&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;临时生效：直接在终端运行此命令。&lt;/li&gt;
&lt;li&gt;永久生效：同样添加到 &lt;code&gt;~/.zshrc&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-总结核心操作优先级"&gt;💎 总结：核心操作优先级
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;必须执行&lt;/strong&gt;：符号链接命令（否则系统工具无法识别 JDK）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;推荐执行&lt;/strong&gt;：配置 &lt;code&gt;PATH&lt;/code&gt;（否则命令行无法直接调用 &lt;code&gt;java&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按需执行&lt;/strong&gt;：设置 &lt;code&gt;CPPFLAGS&lt;/code&gt;（仅涉及 JNI 开发时需配置）。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;完成前两步后，可通过以下命令验证：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/usr/libexec/java_home -V # 查看系统识别的 JDK 列表
java -version # 检查当前 JDK 版本
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;若显示 &lt;code&gt;openjdk 17.x.x&lt;/code&gt; 则表明配置成功。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="jmh"&gt;JMH
&lt;/h2&gt;&lt;p&gt;JMH（Java Microbenchmark Harness）是OpenJDK团队开发的专用于&lt;strong&gt;Java微基准测试&lt;/strong&gt;的工具，主要用于精确测量方法级别的性能（精度可达纳秒级），解决传统计时测试（如&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;）在JVM环境下因JIT编译、类加载等因素导致的误差问题。以下从核心特性、使用流程、应用场景及最佳实践展开详解：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="一核心特性与工作原理"&gt;一、核心特性与工作原理
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;精准控制测试环境&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;预热机制&lt;/strong&gt;（&lt;code&gt;@Warmup&lt;/code&gt;）：通过多次预热迭代触发JIT编译，避免冷启动干扰结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多进程隔离&lt;/strong&gt;（&lt;code&gt;@Fork&lt;/code&gt;）：每个测试在独立JVM进程中运行，防止环境交叉影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态管理&lt;/strong&gt;（&lt;code&gt;@State&lt;/code&gt;）：支持线程私有（&lt;code&gt;Scope.Thread&lt;/code&gt;）、全局共享（&lt;code&gt;Scope.Benchmark&lt;/code&gt;）或组共享（&lt;code&gt;Scope.Group&lt;/code&gt;）状态，模拟多线程场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多维性能指标&lt;/strong&gt;（&lt;code&gt;@BenchmarkMode&lt;/code&gt;）：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;吞吐量&lt;/strong&gt;（&lt;code&gt;Throughput&lt;/code&gt;）：单位时间操作数（如OPS）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;平均耗时&lt;/strong&gt;（&lt;code&gt;AverageTime&lt;/code&gt;）：单次操作耗时。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;采样时间&lt;/strong&gt;（&lt;code&gt;SampleTime&lt;/code&gt;）：统计耗时分布（如P99）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单次执行&lt;/strong&gt;（&lt;code&gt;SingleShotTime&lt;/code&gt;）：测试冷启动性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防编译器优化&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;死码消除防护&lt;/strong&gt;：通过&lt;code&gt;Blackhole&lt;/code&gt;消费计算结果，避免无效代码被JIT优化移除。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内联控制&lt;/strong&gt;（&lt;code&gt;@CompilerControl&lt;/code&gt;）：强制指定方法内联策略（如&lt;code&gt;DONT_INLINE&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="二使用流程以maven项目为例"&gt;二、使用流程（以Maven项目为例）
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;依赖配置&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;org.openjdk.jmh&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;jmh-core&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.37&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
&amp;lt;artifactId&amp;gt;jmh-generator-annprocess&amp;lt;/artifactId&amp;gt;
&amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编写基准测试&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;@BenchmarkMode(Mode.Throughput)
@OutputTimeUnit(TimeUnit.SECONDS)
@Warmup(iterations = 3, time = 1) // 预热3轮，每轮1秒
@Measurement(iterations = 5, time = 1) // 测试5轮
@Fork(1)
public class MyBenchmark {
@State(Scope.Thread)
public static class MyState {
int value = 42;
}
@Benchmark
public void testMethod(MyState state, Blackhole bh) {
int result = state.value * 2;
bh.consume(result); // 防止死码消除
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行测试&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IDE执行&lt;/strong&gt;：直接运行&lt;code&gt;main&lt;/code&gt;方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 命令行打包
：
```
mvn clean install
java -jar target/benchmarks.jar
```
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;结果分析&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认输出控制台报告（最小值/平均值/最大值）。&lt;/li&gt;
&lt;li&gt;导出JSON/CSV后，可用工具（如&lt;a class="link" href="https://jmh.morethan.io/" target="_blank" rel="noopener"
&gt;JMH Visualizer&lt;/a&gt;）可视化分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="三典型应用场景"&gt;三、典型应用场景
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;算法/数据结构优化对比&lt;/strong&gt;：
例如对比&lt;code&gt;ArrayList&lt;/code&gt;与&lt;code&gt;LinkedList&lt;/code&gt;的随机访问性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方库性能评估&lt;/strong&gt;：
如测试Jackson vs. Gson的JSON序列化速度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并发代码验证&lt;/strong&gt;：
通过&lt;code&gt;@Group&lt;/code&gt;和&lt;code&gt;@GroupThreads&lt;/code&gt;模拟生产者-消费者模型，测试锁性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JVM机制研究&lt;/strong&gt;：
分析伪共享（False Sharing）或方法内联的影响（通过&lt;code&gt;@CompilerControl&lt;/code&gt;）。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="四最佳实践与避坑指南"&gt;四、最佳实践与避坑指南
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;避免循环测试&lt;/strong&gt;：
循环会被JIT优化，导致结果失真；应依赖JMH的迭代控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参数化测试&lt;/p&gt;
&lt;p&gt;（&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;@Param
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;）：&lt;/p&gt;
&lt;p&gt;测试不同输入下的性能差异，如不同数据规模对排序算法的影响。&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;@State(Scope.Thread)
public class ParamsState {
@Param({&amp;#34;100&amp;#34;, &amp;#34;1000&amp;#34;, &amp;#34;10000&amp;#34;})
int size;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;资源管理&lt;/strong&gt;：
使用&lt;code&gt;@Setup&lt;/code&gt;和&lt;code&gt;@TearDown&lt;/code&gt;初始化和清理资源（如数据库连接）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;结果可视化&lt;/strong&gt;：
导出JSON结合&lt;a class="link" href="http://deepoove.com/jmh-visual-chart" target="_blank" rel="noopener"
&gt;可视化工具&lt;/a&gt;生成图表，直观对比多组数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="五高级功能"&gt;五、高级功能
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能剖析&lt;/strong&gt;（&lt;code&gt;@Profiler&lt;/code&gt;）：
集成&lt;code&gt;StackProfiler&lt;/code&gt;或&lt;code&gt;GCProfiler&lt;/code&gt;分析热点代码或GC行为。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;异步中断&lt;/strong&gt;：
使用&lt;code&gt;Control&lt;/code&gt;对象处理死锁或超时任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨版本测试&lt;/strong&gt;：
结合CI工具（Jenkins插件）在多版本JDK下运行测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;JMH通过&lt;strong&gt;科学的方法论&lt;/strong&gt;和&lt;strong&gt;精细的控制能力&lt;/strong&gt;，成为Java生态中性能测试的权威工具。其设计充分考虑了JVM的复杂性，确保结果可靠。对于需要深度性能调优的开发者，掌握JMH是提升代码效率的关键技能。进一步学习可参考&lt;a class="link" href="http://hg.openjdk.java.net/code-tools/jmh/file/tip/jmh-samples/" target="_blank" rel="noopener"
&gt;官方示例&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="jtreg"&gt;jtreg
&lt;/h2&gt;&lt;p&gt;jtreg（Java Test Harness）是专为&lt;strong&gt;OpenJDK平台设计的官方测试框架&lt;/strong&gt;，主要用于回归测试（确保代码修改后原有功能不受影响），但也支持单元测试、功能测试等场景。以下是其核心特性和应用解析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="一核心功能与设计目标"&gt;一、&lt;strong&gt;核心功能与设计目标&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;回归测试为主&lt;/strong&gt;
jtreg的核心定位是验证JDK修改后的兼容性，确保新代码不破坏现有功能。例如，OpenJDK开发者提交代码前需通过jtreg测试，防止引入回归错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多类型测试支持&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;单元测试&lt;/strong&gt;：验证单个方法或类的行为。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能测试&lt;/strong&gt;：检查模块级功能是否符合预期。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编译器测试&lt;/strong&gt;：支持正/负编译场景（如语法错误检测）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shell脚本测试&lt;/strong&gt;：允许用Shell脚本编写测试用例，扩展灵活性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动化编译与执行&lt;/strong&gt;
jtreg自动编译测试代码并执行，无需预先编译测试类，简化测试流程。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="二技术特点"&gt;二、&lt;strong&gt;技术特点&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;注解驱动测试配置&lt;/strong&gt;
测试用例通过Java文件头部的特殊注释标签定义，例如：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/* @test TestDummy
* @summary 测试虚拟机参数功能
* @library /test/lib
* @run main/othervm TestDummy
*/
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@test&lt;/code&gt;：标记测试用例。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@summary&lt;/code&gt;：描述测试目的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@run&lt;/code&gt;：指定执行命令和参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;测试结果与日志管理&lt;/strong&gt;
测试结束后生成结构化报告（HTML/XML），包含通过/失败/错误统计，并保存详细日志（&lt;code&gt;.jtr&lt;/code&gt;文件）便于定位问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多环境兼容性&lt;/strong&gt;
支持指定不同JDK版本运行测试，确保跨版本兼容性（如通过&lt;code&gt;@compile&lt;/code&gt;指定备用JDK）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="三典型应用场景-1"&gt;三、&lt;strong&gt;典型应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;OpenJDK开发验证&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分层测试&lt;/strong&gt;：OpenJDK测试分为4层（tier1~tier4），其中tier1为最基础测试（如&lt;code&gt;make run-test-tier1&lt;/code&gt;），覆盖核心功能且执行速度快。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义功能测试&lt;/strong&gt;：例如新增JVM参数（如&lt;code&gt;-XX:DummyPrint&lt;/code&gt;）后，编写jtreg测试验证其行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;国产JVM评估&lt;/strong&gt;
在龙芯等国产平台中，jtreg用于测试JVM的基础功能（如字节码解析、类加载机制），结合SPECJVM2008、TPCW等工具进行性能与稳定性综合评估。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;教育与开源项目&lt;/strong&gt;
腾讯犀牛鸟开源计划中，学生使用jtreg研究JVM垃圾回收机制（如G1GC优化），通过编写测试用例分析GC行为。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="四与其他测试工具对比"&gt;四、&lt;strong&gt;与其他测试工具对比&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;jtreg&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定位&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;JDK回归测试&lt;/td&gt;
&lt;td&gt;通用单元测试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;编译支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;自动编译测试代码&lt;/td&gt;
&lt;td&gt;需预先编译&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;测试粒度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;方法/类/模块/Shell脚本&lt;/td&gt;
&lt;td&gt;方法/类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;集成性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;深度集成OpenJDK构建流程&lt;/td&gt;
&lt;td&gt;独立于特定平台&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;用例配置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;注释标签驱动&lt;/td&gt;
&lt;td&gt;注解驱动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id="五使用流程示例"&gt;五、&lt;strong&gt;使用流程示例&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;以测试自定义JVM参数为例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编写测试类&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;public class TestDummy {
public static void main(String[] args) {
// 检查JVM参数输出
if (Boolean.getBoolean(&amp;#34;DummyPrint&amp;#34;)) {
System.out.println(&amp;#34;Hello World&amp;#34;);
}
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加注释标签&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/* @test TestDummy
* @summary 验证-XX:DummyPrint参数
* @run main/othervm -XX:DummyPrint TestDummy
*/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;执行测试&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;./jtreg -jdk:/path/to/jdk TestDummy.java
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;若输出包含&amp;quot;Hello World&amp;quot;则通过，否则标记为失败。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="六局限性"&gt;六、&lt;strong&gt;局限性&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;非通用测试框架&lt;/strong&gt;：主要针对JDK生态，复杂业务测试建议结合JUnit。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;学习成本&lt;/strong&gt;：注释标签系统需额外学习，不如通用框架直观。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="总结-2"&gt;总结
&lt;/h3&gt;&lt;p&gt;jtreg是&lt;strong&gt;OpenJDK生态的基石级测试工具&lt;/strong&gt;，通过自动化编译、多类型测试支持和分层验证机制，保障JDK的稳定性和兼容性。其在国产JVM验证、教育项目中的应用也日益广泛。对于JDK贡献者或JVM开发者，掌握jtreg是提升代码可靠性的关键技能。&lt;/p&gt;
&lt;h2 id="openssl-env-api"&gt;OpenSSL ENV API
&lt;/h2&gt;&lt;p&gt;OpenSSL EVP（Envelope）API 是一套&lt;strong&gt;高层级的密码学接口&lt;/strong&gt;，旨在为开发者提供统一、跨算法的加密操作抽象，简化对称/非对称加密、哈希、签名等功能的实现，同时提升代码的可维护性和安全性。以下从核心特性、数据结构、使用流程及应用场景展开介绍：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="一核心功能模块"&gt;一、核心功能模块
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;对称加密与解密&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;支持 AES（CBC/CTR/GCM 等模式）、DES、3DES、SM4（国密）等算法。&lt;/li&gt;
&lt;li&gt;自动处理分组填充（如 PKCS#7）、初始化向量（IV）及密钥管理。&lt;/li&gt;
&lt;li&gt;典型流程：初始化上下文 → 加密/解密数据 → 结束操作并清理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息摘要（哈希）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;集成 SHA-256、MD5、SM3（国密）等算法。&lt;/li&gt;
&lt;li&gt;支持流式数据处理（&lt;code&gt;EVP_DigestUpdate&lt;/code&gt; 可多次调用）。&lt;/li&gt;
&lt;li&gt;简化接口 &lt;code&gt;EVP_Digest()&lt;/code&gt; 支持单次小数据哈希。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字签名与验证&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;封装 RSA、ECDSA、SM2（国密）等非对称算法的签名/验证操作。&lt;/li&gt;
&lt;li&gt;结合哈希算法生成签名，避免手动处理密钥与摘要的耦合。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密钥派生与密码学协议&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;支持 PBKDF2 等密钥派生算法（KDF）。&lt;/li&gt;
&lt;li&gt;实现数字信封：用公钥加密对称密钥，再用该密钥加密数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多算法引擎支持&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;可动态加载硬件加速引擎（如加密卡），通过 &lt;code&gt;ENGINE&lt;/code&gt; 参数指定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="二核心数据结构"&gt;二、核心数据结构
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;结构体&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EVP_CIPHER_CTX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;对称加密上下文，存储密钥、IV、算法模式及中间状态（如 CBC 模式的块缓冲）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EVP_MD_CTX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;消息摘要上下文，管理哈希计算的状态与数据流。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EVP_PKEY_CTX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非对称操作上下文，处理密钥生成、加密、签名等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EVP_CIPHER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;描述对称算法属性（如 AES-256-CBC），包含块大小、密钥长度等元数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EVP_MD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;描述哈希算法（如 SHA-256），包含摘要长度、初始化函数等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;EVP_PKEY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;封装非对称密钥（RSA、ECC 等），统一公钥/私钥操作接口。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：&lt;code&gt;EVP_CIPHER_CTX&lt;/code&gt; 内部维护加密状态（如未处理的分组数据），支持分块处理大文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="三编程模型与关键函数"&gt;三、编程模型与关键函数
&lt;/h3&gt;&lt;h4 id="1-对称加密流程以-aes-256-cbc-为例"&gt;1. 对称加密流程（以 AES-256-CBC 为例）
&lt;/h4&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;EVP_CIPHER_CTX *ctx = EVP_CIPHER_CTX_new();
const EVP_CIPHER *cipher = EVP_aes_256_cbc();
unsigned char key[32], iv[16]; // 密钥与初始化向量
// 加密初始化
EVP_EncryptInit_ex(ctx, cipher, NULL, key, iv);
// 分块更新数据
EVP_EncryptUpdate(ctx, ciphertext, &amp;amp;out_len, plaintext, plaintext_len);
// 处理末尾填充
EVP_EncryptFinal_ex(ctx, ciphertext + out_len, &amp;amp;tmp_len);
EVP_CIPHER_CTX_free(ctx); // 释放上下文
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id="2-哈希计算流程以-sha-256-为例"&gt;2. 哈希计算流程（以 SHA-256 为例）
&lt;/h4&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;EVP_MD_CTX *mdctx = EVP_MD_CTX_new();
EVP_DigestInit_ex(mdctx, EVP_sha256(), NULL);
EVP_DigestUpdate(mdctx, data, data_len);
EVP_DigestFinal_ex(mdctx, digest, &amp;amp;digest_len);
EVP_MD_CTX_free(mdctx);
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id="3-非对称签名流程"&gt;3. 非对称签名流程
&lt;/h4&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;EVP_MD_CTX *mdctx = EVP_MD_CTX_new();
EVP_PKEY *pkey = load_private_key(); // 加载私钥
EVP_DigestSignInit(mdctx, NULL, EVP_sha256(), NULL, pkey);
EVP_DigestSignUpdate(mdctx, data, data_len);
EVP_DigestSignFinal(mdctx, signature, &amp;amp;sig_len);
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h3 id="四关键优势与适用场景"&gt;四、关键优势与适用场景
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;算法无关性&lt;/strong&gt;
通过抽象接口屏蔽底层差异，例如替换 AES 为 SM4 仅需修改 &lt;code&gt;EVP_CIPHER&lt;/code&gt; 对象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性增强&lt;/strong&gt;
自动处理易错细节（如 IV 生成、填充模式），减少手动实现漏洞。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;国密算法支持&lt;/strong&gt;
原生集成 SM2（非对称）、SM3（哈希）、SM4（对称）等国产算法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高性能扩展&lt;/strong&gt;
支持硬件加速引擎（如加密卡），提升计算效率。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="五注意事项"&gt;五、注意事项
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源管理&lt;/strong&gt;：上下文对象（如 &lt;code&gt;EVP_CIPHER_CTX&lt;/code&gt;）需手动分配/释放，避免内存泄漏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：检查函数返回值（成功返回 1，失败返回 0），用 &lt;code&gt;ERR_print_errors_fp&lt;/code&gt; 输出错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;填充模式&lt;/strong&gt;：默认启用 PKCS#7 填充，可通过 &lt;code&gt;EVP_CIPHER_CTX_set_padding()&lt;/code&gt; 禁用。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="六典型应用示例"&gt;六、典型应用示例
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;国密 SM4 加密&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;const EVP_CIPHER *cipher = EVP_sm4_cbc(); // 使用 SM4-CBC
EVP_EncryptInit_ex(ctx, cipher, NULL, key, iv);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;密钥派生（PBKDF2）&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;EVP_PBE_scrypt(password, salt, key, ...); // 基于口令生成密钥
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EVP API 通过统一接口降低了密码学开发的复杂度，尤其适合需兼容多算法或符合国密标准的场景。进一步实践可参考 OpenSSL 官方文档及示例代码。&lt;/p&gt;
&lt;h2 id="import-static"&gt;import static
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;import static&lt;/code&gt;（静态导入）是 Java 从 &lt;strong&gt;JDK 1.5&lt;/strong&gt; 开始引入的语法特性，用于&lt;strong&gt;直接导入某个类的静态成员（静态方法或静态变量）&lt;/strong&gt;，从而在代码中省略类名前缀，简化调用。以下是其核心要点：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一核心作用与语法"&gt;⚙️ &lt;strong&gt;一、核心作用与语法&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;目的&lt;/strong&gt;
解决频繁调用静态成员时重复书写类名的冗余问题。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未使用静态导入：&lt;code&gt;Math.sqrt(4)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用静态导入后：&lt;code&gt;sqrt(4)&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法格式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; 精确导入
：指定单个静态成员
```
import static 包名.类名.静态成员名; // 例如：import static java.lang.Math.PI;
```
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt; 通配符导入
：导入类的所有静态成员
```
import static 包名.类名.*; // 例如：import static java.lang.Math.*;
```
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;位置要求：位于 &lt;code&gt;package&lt;/code&gt; 语句后、类定义前，与普通 &lt;code&gt;import&lt;/code&gt; 语句并列（顺序不限）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-二典型应用场景"&gt;⚡️ &lt;strong&gt;二、典型应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;简化高频调用的静态成员&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;数学计算：频繁使用 &lt;code&gt;Math&lt;/code&gt; 类的 &lt;code&gt;PI&lt;/code&gt;、&lt;code&gt;sqrt()&lt;/code&gt;、&lt;code&gt;sin()&lt;/code&gt; 等，可大幅减少代码量。&lt;/li&gt;
&lt;li&gt;常量使用：如系统常量 &lt;code&gt;System.out&lt;/code&gt;，导入后直接写 &lt;code&gt;out.println()&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提升代码可读性&lt;/strong&gt;
当逻辑密集依赖某类的静态方法时（如工具类），省略类名可使代码更简洁直观。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-三注意事项与潜在问题"&gt;⚠️ &lt;strong&gt;三、注意事项与潜在问题&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;命名冲突风险&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;若导入多个类的同名静态成员（如&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Integer.MAX_VALUE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;和&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Long.MAX_VALUE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;），需显式指定类名避免歧义：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;System.out.println(Integer.MAX_VALUE); // 冲突时强制使用类名
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若与当前类的成员同名，&lt;strong&gt;本地成员优先&lt;/strong&gt;（覆盖导入的静态成员）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;可读性下降&lt;/strong&gt;
过度使用通配符导入（&lt;code&gt;.*&lt;/code&gt;）可能导致代码难以追踪静态成员的来源，建议在明确来源时使用（如 &lt;code&gt;Math&lt;/code&gt;类）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;不支持非静态成员&lt;/strong&gt;
仅适用于 &lt;code&gt;static&lt;/code&gt; 修饰的成员，普通实例方法/变量无法导入。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-四与普通"&gt;🔄 &lt;strong&gt;四、与普通 &lt;code&gt;import&lt;/code&gt; 的区别&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;普通 &lt;code&gt;import&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;import static&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;导入对象&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;类、接口、枚举&lt;/td&gt;
&lt;td&gt;类的静态成员（方法/变量）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;使用方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;省略包名（如 &lt;code&gt;ArrayList&lt;/code&gt;）&lt;/td&gt;
&lt;td&gt;省略类名（如 &lt;code&gt;sqrt()&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;import java.util.ArrayList;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;import static java.lang.Math.PI;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;引入其他包的类&lt;/td&gt;
&lt;td&gt;简化静态成员的调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;本质&lt;/strong&gt;：&lt;code&gt;import&lt;/code&gt; 省略包名，&lt;code&gt;import static&lt;/code&gt; 省略类名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="-五使用建议-1"&gt;💎 &lt;strong&gt;五、使用建议&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;推荐场景&lt;/strong&gt;：高频调用工具类的静态方法（如 &lt;code&gt;Math&lt;/code&gt;、&lt;code&gt;Collections&lt;/code&gt;）或常量时。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;避免滥用&lt;/p&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;优先使用&lt;strong&gt;精确导入&lt;/strong&gt;而非通配符，减少冲突风险。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在团队协作中明确规范，防止可读性恶化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;冲突处理&lt;/strong&gt;：冲突时回退到 &lt;code&gt;类名.成员&lt;/code&gt; 的完整写法，或重构代码结构。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="代码示例对比"&gt;代码示例对比
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;// 未使用静态导入
double area = Math.PI * Math.pow(radius, 2);
System.out.println(&amp;#34;Area: &amp;#34; + area);
// 使用静态导入
import static java.lang.Math.PI;
import static java.lang.Math.pow;
import static java.lang.System.out;
double area = PI * pow(radius, 2);
out.println(&amp;#34;Area: &amp;#34; + area); // 省略System和Math前缀
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;静态导入是 Java 简化代码的实用工具，但需权衡简洁性与可维护性，在&lt;strong&gt;高频调用+低冲突风险&lt;/strong&gt;的场景下发挥最大价值 ✅。&lt;/p&gt;
&lt;h2 id="jni"&gt;JNI
&lt;/h2&gt;&lt;p&gt;Java Native Interface（JNI）是Java平台的编程框架，用于实现Java代码与本地代码（如C、C++、汇编）的相互调用。它充当Java虚拟机（JVM）与本地应用程序之间的桥梁，尤其在需要突破Java语言限制或提升性能的场景中至关重要。以下是JNI的详细解析：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-一jni的核心作用"&gt;⚙️ &lt;strong&gt;一、JNI的核心作用&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;访问平台相关功能&lt;/strong&gt;
Java的跨平台特性使其无法直接调用操作系统底层API或硬件驱动。JNI允许Java通过本地代码访问这些平台特定功能，例如：
&lt;ul&gt;
&lt;li&gt;操作系统的文件系统接口、硬件驱动（如摄像头、传感器）。&lt;/li&gt;
&lt;li&gt;调用高性能本地库（如图形渲染库OpenGL、音视频处理库FFmpeg）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提升关键代码性能&lt;/strong&gt;
对计算密集型任务（如物理模拟、图像处理），本地代码（C/C++）通常比Java字节码执行效率更高。JNI可将性能敏感模块交由本地代码实现，例如：
&lt;ul&gt;
&lt;li&gt;游戏引擎中的实时渲染模块。&lt;/li&gt;
&lt;li&gt;科学计算中的矩阵运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复用现有本地代码库&lt;/strong&gt;
避免重复开发，直接集成成熟的C/C++库（如数据库SQLite、压缩库7zip、计算机视觉库OpenCV）。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-二jni的工作原理"&gt;🔧 &lt;strong&gt;二、JNI的工作原理&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="1-交互机制"&gt;&lt;strong&gt;1. 交互机制&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java层&lt;/p&gt;
&lt;p&gt;：通过&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;native
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;关键字声明方法（无方法体），例如：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;public native void processData(byte[] data);
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本地层&lt;/p&gt;
&lt;p&gt;：在C/C++中实现对应函数，命名需遵循&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Java_{类全路径}_{方法名}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;规范：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;JNIEXPORT void JNICALL Java_com_example_NativeLib_processData(JNIEnv* env, jobject obj, jbyteArray data) {
// 本地代码实现
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JVM调用&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;native
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法时，自动通过JNI接口将控制权转移至本地函数。&lt;/p&gt;
&lt;h4 id="2-数据类型映射"&gt;&lt;strong&gt;2. 数据类型映射&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;JNI定义了Java与本地类型间的转换规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基本类型&lt;/strong&gt;：直接映射（如&lt;code&gt;jint&lt;/code&gt; ↔ &lt;code&gt;int&lt;/code&gt;，&lt;code&gt;jboolean&lt;/code&gt; ↔ &lt;code&gt;bool&lt;/code&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对象类型&lt;/p&gt;
&lt;p&gt;：需通过JNI函数转换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符串&lt;/strong&gt;：使用&lt;code&gt;GetStringUTFChars&lt;/code&gt;将&lt;code&gt;jstring&lt;/code&gt;转为C字符串，操作后需&lt;code&gt;ReleaseStringUTFChars&lt;/code&gt;释放内存。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数组&lt;/strong&gt;：通过&lt;code&gt;Get&amp;lt;Type&amp;gt;ArrayElements&lt;/code&gt;获取本地指针，操作后释放。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义对象&lt;/strong&gt;：通过&lt;code&gt;GetFieldID&lt;/code&gt;/&lt;code&gt;GetMethodID&lt;/code&gt;访问字段或方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-内存管理"&gt;&lt;strong&gt;3. 内存管理&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;本地内存&lt;/strong&gt;：手动分配/释放（如&lt;code&gt;malloc/free&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java对象内存&lt;/strong&gt;：JVM垃圾回收机制管理，但本地代码需通过&lt;code&gt;NewGlobalRef&lt;/code&gt;/&lt;code&gt;DeleteGlobalRef&lt;/code&gt;显式控制对象生命周期，避免内存泄漏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="4-jnienv接口指针"&gt;&lt;strong&gt;4. JNIEnv接口指针&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;核心结构，提供所有JNI函数（如对象操作、异常抛出）。&lt;/li&gt;
&lt;li&gt;线程安全：不同线程调用同一本地方法可能收到不同的&lt;code&gt;JNIEnv&lt;/code&gt;指针。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="-三jni编程步骤"&gt;📝 &lt;strong&gt;三、JNI编程步骤&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;步骤&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;操作说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1. 声明native方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Java类中用&lt;code&gt;native&lt;/code&gt;修饰方法，如&lt;code&gt;public native void calculate();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2. 生成头文件&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;使用&lt;code&gt;javac -h&lt;/code&gt;或&lt;code&gt;javah&lt;/code&gt;工具生成C/C++头文件，包含函数签名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3. 实现本地方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;C/C++中按头文件签名实现函数逻辑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;4. 编译为动态库&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;平台相关编译（Windows为&lt;code&gt;.dll&lt;/code&gt;，Linux为&lt;code&gt;.so&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5. Java加载动态库&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;静态代码块中调用&lt;code&gt;System.loadLibrary(&amp;quot;库名&amp;quot;)&lt;/code&gt;，如&lt;code&gt;System.loadLibrary(&amp;quot;nativeLib&amp;quot;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id="-四应用场景与局限"&gt;⚠️ &lt;strong&gt;四、应用场景与局限&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="典型场景"&gt;&lt;strong&gt;典型场景&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android开发&lt;/strong&gt;：通过JNI调用本地媒体编解码库（如Android的&lt;code&gt;MediaCodec&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高性能计算&lt;/strong&gt;：金融分析、信号处理等需底层优化的领域。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统级操作&lt;/strong&gt;：开发硬件驱动或操作内核模块（如Linux内核交互）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="局限性"&gt;&lt;strong&gt;局限性&lt;/strong&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;复杂性&lt;/strong&gt;：需手动管理内存和数据类型转换，易引发崩溃（如未释放字符串内存）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性风险&lt;/strong&gt;：本地代码漏洞可能导致JVM崩溃。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可移植性降低&lt;/strong&gt;：依赖本地库的平台兼容性。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-五总结"&gt;💎 &lt;strong&gt;五、总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;JNI是Java生态中突破性能与平台限制的核心技术，适用于&lt;strong&gt;高性能计算&lt;/strong&gt;、&lt;strong&gt;系统级操作&lt;/strong&gt;和&lt;strong&gt;复用本地库&lt;/strong&gt;的场景。但其开发复杂度高，需谨慎处理内存管理与类型转换。在Android领域，NDK（Native Development Kit）进一步简化了JNI开发流程，提供了交叉编译工具链，便于生成ARM平台的本地库。开发者应权衡需求，仅在必要时使用JNI，并严格遵循安全规范。&lt;/p&gt;
&lt;h2 id="java-模块"&gt;Java 模块
&lt;/h2&gt;&lt;p&gt;Java模块系统（Java Platform Module System, JPMS），又称Project Jigsaw，是Java 9引入的核心特性，旨在解决传统Java开发中的依赖管理混乱、封装性不足及部署臃肿等问题。以下从核心概念、技术机制、工具链及实践场景展开详细说明：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="一模块系统的核心概念"&gt;&lt;strong&gt;一、模块系统的核心概念&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模块（Module）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：模块是代码和数据的命名集合，包含一组相关的包、资源及模块描述文件（&lt;code&gt;module-info.java&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;层级结构&lt;/strong&gt;：&lt;code&gt;JAR &amp;gt; Module &amp;gt; Package &amp;gt; Class/Interface&lt;/code&gt;，实现更细粒度的代码组织。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强封装性&lt;/strong&gt;：只有显式声明导出的包（&lt;code&gt;exports&lt;/code&gt;）才能被外部访问，即使类为&lt;code&gt;public&lt;/code&gt;，未导出的包对其他模块不可见。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模块描述符（&lt;code&gt;module-info.java&lt;/code&gt;）&lt;/strong&gt;
位于模块根目录，声明模块元数据：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;module com.example.app {
requires java.sql; // 依赖其他模块
exports com.example.api; // 公开指定包
provides Service with ServiceImpl; // 服务提供
uses Service; // 服务消费
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requires&lt;/code&gt;：声明依赖的模块（如&lt;code&gt;java.base&lt;/code&gt;是隐式依赖的基础模块）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exports&lt;/code&gt;：控制包的可见性，未导出的包内部使用。&lt;/li&gt;
&lt;li&gt;服务机制：通过&lt;code&gt;provides...with&lt;/code&gt;和&lt;code&gt;uses&lt;/code&gt;实现解耦的服务发现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="二jdk自身的模块化"&gt;&lt;strong&gt;二、JDK自身的模块化&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Java 9将JDK拆分为约&lt;strong&gt;94个核心模块&lt;/strong&gt;，例如：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;模块名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;java.base&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;核心包（如&lt;code&gt;java.lang&lt;/code&gt;、&lt;code&gt;java.util&lt;/code&gt;），所有模块的隐式依赖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;java.sql&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JDBC数据库连接API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;java.desktop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;AWT/Swing图形界面库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jdk.compiler&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java编译器实现（&lt;code&gt;javac&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优势&lt;/strong&gt;：按需加载模块，减少运行时资源占用（如通过&lt;code&gt;jlink&lt;/code&gt;生成最小化JRE）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id="三模块化核心机制"&gt;&lt;strong&gt;三、模块化核心机制&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;依赖解析与模块图&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;模块路径（&lt;code&gt;--module-path&lt;/code&gt;）替代类路径，JVM基于&lt;code&gt;module-info.java&lt;/code&gt;构建&lt;strong&gt;有向模块图&lt;/strong&gt;，确保依赖关系无环且完整。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;循环依赖&lt;/strong&gt;：模块间禁止直接循环依赖，需通过接口或服务机制解耦。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;兼容性设计&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自动模块&lt;/strong&gt;：传统JAR置于模块路径时，自动转换为模块（导出所有包，依赖所有模块）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未命名模块&lt;/strong&gt;：类路径中的JAR归入未命名模块，支持旧代码逐步迁移。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="四工具链与开发流程"&gt;&lt;strong&gt;四、工具链与开发流程&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关键工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;jdeps&lt;/code&gt;&lt;/strong&gt;：分析JAR的模块依赖，指导迁移策略。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;jlink&lt;/code&gt;&lt;/strong&gt;：创建定制化JRE镜像，仅包含指定模块（例：&lt;code&gt;jlink --add-modules java.base --output minimal-jre&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;jmod&lt;/code&gt;&lt;/strong&gt;：打包模块为JMOD格式（支持本地代码等资源）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编译与运行&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;# 编译模块
javac -d out --module-source-path src -m com.example.app
# 运行模块
java --module-path out -m com.example.app/com.example.Main
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="五实际应用场景与挑战"&gt;&lt;strong&gt;五、实际应用场景与挑战&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;典型用例&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;微服务与云部署&lt;/strong&gt;：通过&lt;code&gt;jlink&lt;/code&gt;生成轻量级镜像（从300MB JDK缩减至30MB），优化容器化部署。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大型系统解耦&lt;/strong&gt;：明确模块边界，避免类路径冲突（如不同库的同名类问题）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迁移挑战&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;框架兼容性&lt;/strong&gt;：Spring 5+部分支持模块化，但需处理自动模块的隐式依赖。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块粒度&lt;/strong&gt;：过度拆分增加管理成本，建议按功能高内聚原则设计。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="六与osgi的对比"&gt;&lt;strong&gt;六、与OSGi的对比&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;JPMS&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;OSGi&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定位&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;语言级模块化（JDK集成）&lt;/td&gt;
&lt;td&gt;动态模块框架（第三方实现）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;热部署&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;支持动态加载/卸载模块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;依赖解析&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;启动时静态验证&lt;/td&gt;
&lt;td&gt;运行时动态解析&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;JPMS适合基础架构封装与部署优化，OSGi适用于需运行时动态管理的场景。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="总结-3"&gt;&lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Java模块系统通过&lt;strong&gt;强封装&lt;/strong&gt;、&lt;strong&gt;显式依赖&lt;/strong&gt;和&lt;strong&gt;服务机制&lt;/strong&gt;，显著提升了代码安全性、可维护性和部署效率。尽管迁移过程需应对生态兼容性挑战（如Spring的渐进支持），但其在云原生与嵌入式领域的价值日益凸显。开发者可通过&lt;code&gt;module-info.java&lt;/code&gt;定义模块、结合&lt;code&gt;jlink&lt;/code&gt;定制运行时，逐步重构项目以发挥模块化优势。&lt;/p&gt;</description></item><item><title>【Cryptography】Practice</title><link>https://dyhes.github.io/p/cryptographypractice/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://dyhes.github.io/p/cryptographypractice/</guid><description>&lt;h2 id="with-bootstrap-jdk"&gt;&amp;ndash;with-bootstrap-jdk
&lt;/h2&gt;&lt;p&gt;在配置 OpenJDK 编译时的 &lt;code&gt;--with-boot-jdk&lt;/code&gt; 参数时，&lt;strong&gt;必须指向 JDK 的安装根目录&lt;/strong&gt;，而非其下的 &lt;code&gt;bin/java&lt;/code&gt; 可执行文件。根据 OpenJDK 构建规范和实际编译要求：&lt;/p&gt;
&lt;p&gt;✅ &lt;strong&gt;正确路径：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;--with-boot-jdk=/opt/homebrew/opt/openjdk@17
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;❌ &lt;strong&gt;错误路径：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;--with-boot-jdk=/opt/homebrew/opt/openjdk@17/bin/java # 无效
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;原因解析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构建系统的设计需求&lt;/strong&gt;
Bootstrap JDK 需提供完整的开发环境，包括头文件（&lt;code&gt;include&lt;/code&gt;）、库文件（&lt;code&gt;lib&lt;/code&gt;）、工具链（&lt;code&gt;bin&lt;/code&gt;）等。若仅指定 &lt;code&gt;java&lt;/code&gt; 可执行文件，构建脚本无法访问其他必要资源，导致配置失败。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;官方文档与实例验证&lt;/strong&gt;
在 OpenJDK 编译文档（如 中的示例）和实际编译命令中，均要求路径为 JDK 根目录：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;--with-boot-jdk=/usr/java/jdk1.8.0_181-amd64 # 根目录，非 bin/java
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Homebrew 的路径结构&lt;/strong&gt;
Homebrew 安装的 &lt;code&gt;openjdk@17&lt;/code&gt; 的完整内容位于 &lt;code&gt;/opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk/Contents/Home&lt;/code&gt;，而 &lt;code&gt;/opt/homebrew/opt/openjdk@17&lt;/code&gt;是其符号链接入口，直接指向此目录，因此可直接使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;验证方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;检查路径是否包含 JDK 标准子目录：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;ls /opt/homebrew/opt/openjdk@17
# 应包含 bin、lib、include、jmods 等目录
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若路径错误，&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;configure
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;脚本会报错：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Error: Bootstrap JDK is not a valid JDK directory.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;完整配置示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;bash ./configure \
--with-boot-jdk=/opt/homebrew/opt/openjdk@17 \
--with-target-bits=64 \
--with-debug-level=slowdebug
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;提示&lt;/strong&gt;：若需进一步验证 JDK 有效性，可运行：
&lt;code&gt;/opt/homebrew/opt/openjdk@17/bin/java -version&lt;/code&gt;
确保返回正确版本（如 &lt;code&gt;OpenJDK 17.x.x&lt;/code&gt;）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;路径类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;正确性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;JDK 根目录&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;提供完整编译所需的文件资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bin/java&lt;/code&gt; 可执行文件&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;td&gt;无法访问库、头文件等关键资源&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="依赖"&gt;依赖
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 下载JMH依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p jmh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -o jmh/jmh-core-1.37.jar https://repo1.maven.org/maven2/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -o jmh/jmh-generator-annprocess-1.37.jar https://repo1.maven.org/maven2/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -o jmh/jopt-simple-5.0.4.jar https://repo1.maven.org/maven2/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -o jmh/commons-math3-3.6.1.jar https://repo1.maven.org/maven2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 下载 jreg 依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p jtreg
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -o jtreg/jtreg-8+2.zip https://builds.shipilev.net/jtreg/jtreg-8%2B2.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;unzip jtreg/jtreg-8+2.zip -d jtreg
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;rm jtreg/jtreg-8+2.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="compile-jdk"&gt;Compile JDK
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;clang
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;clang++
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;USE_CLANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;COMPILER_WARNINGS_FATAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ARCH_DATA_MODEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LP64&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;HOTSPOT_BUILD_JOBS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 配置构建系统（macOS）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bash configure &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --with-boot-jdk&lt;span class="o"&gt;=&lt;/span&gt;/opt/homebrew/opt/openjdk@17 &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --with-jtreg&lt;span class="o"&gt;=&lt;/span&gt;./jtreg &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --with-jmh&lt;span class="o"&gt;=&lt;/span&gt;./jmh &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --with-openssl&lt;span class="o"&gt;=&lt;/span&gt;/opt/homebrew/opt/openssl@3 &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --disable-warnings-as-errors
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make clean
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 构建 JDK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make images
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 验证构建&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;build/macosx-aarch64-server-release/jdk/bin/java --version
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 运行 jreg:SM2CipherTest 测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; &lt;span class="nv"&gt;JTREG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;VM_OPTIONS=-Djdk.openssl.cryptoLibPath=/opt/homebrew/opt/openssl@3/lib/libcrypto.3.dylib&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 构建 JMH 测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make build-microbenchmark
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 基于 openssl 运行 JMH 测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;micro:org.openjdk.bench.java.security.SM2ComparisonBenchmark&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; &lt;span class="nv"&gt;MICRO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;OPTIONS=-jvmArgs=-Djdk.openssl.cryptoLibPath=/opt/homebrew/opt/openssl@3/lib/libcrypto.3.dylib -prof gc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 基于 java 运行 JMH 测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;micro:org.openjdk.bench.java.security.SM2ComparisonBenchmark&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; &lt;span class="nv"&gt;MICRO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;OPTIONS=-prof gc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="jtreg-测试"&gt;Jtreg 测试
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; &lt;span class="nv"&gt;JTREG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;VM_OPTIONS=-Djdk.openssl.cryptoLibPath=/opt/homebrew/opt/openssl@3/lib/libcrypto.3.dylib&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Building target &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt; in configuration &lt;span class="s1"&gt;&amp;#39;macosx-aarch64-server-release&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Running tests using JTREG control variable &lt;span class="s1"&gt;&amp;#39;VM_OPTIONS=-Djdk.openssl.cryptoLibPath=/opt/homebrew/opt/openssl@3/lib/libcrypto.3.dylib&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Test selection &lt;span class="s1"&gt;&amp;#39;jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java&amp;#39;&lt;/span&gt;, will run:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;* jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Running &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Passed: sm/crypto/SM2/SM2CipherTest.java
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Test results: passed: &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Report written to /Users/hongpeng.lin/Project/TencentKona-17/build/macosx-aarch64-server-release/test-results/jtreg_test_jdk_sm_crypto_SM2_SM2CipherTest_java/html/report.html
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Results written to /Users/hongpeng.lin/Project/TencentKona-17/build/macosx-aarch64-server-release/test-support/jtreg_test_jdk_sm_crypto_SM2_SM2CipherTest_java
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Finished running &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Test report is stored in build/macosx-aarch64-server-release/test-results/jtreg_test_jdk_sm_crypto_SM2_SM2CipherTest_java
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;==============================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Test &lt;span class="nv"&gt;summary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;==============================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; TEST TOTAL PASS FAIL ERROR
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; jtreg:test/jdk/sm/crypto/SM2/SM2CipherTest.java &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;==============================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;TEST SUCCESS
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Finished building target &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt; in configuration &lt;span class="s1"&gt;&amp;#39;macosx-aarch64-server-release&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="jmh-测试"&gt;JMH 测试
&lt;/h3&gt;&lt;h4 id="jni--openssl"&gt;JNI + OPENSSL
&lt;/h4&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Benchmark &lt;span class="o"&gt;(&lt;/span&gt;dataSize&lt;span class="o"&gt;)&lt;/span&gt; Mode Cnt Score Error Units
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2277.689 ? 64.486 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.045 ? 0.474 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6466.003 ? 51.673 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2331.531 ? 33.078 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.768 ? 0.257 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6642.335 ? 50.914 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2289.050 ? 61.874 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.058 ? 0.426 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6898.426 ? 50.992 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2179.238 ? 70.886 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.401 ? 0.468 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6930.550 ? 0.791 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2243.672 ? 71.607 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.894 ? 0.577 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6962.508 ? 50.943 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2325.406 ? 28.165 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.439 ? 0.223 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6962.398 ? 50.999 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9327.355 ? 113.758 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 19.434 ? 0.241 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2184.873 ? 1.388 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9220.344 ? 141.167 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 20.053 ? 0.458 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2280.603 ? 25.497 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9095.394 ? 149.268 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 21.585 ? 0.352 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2488.692 ? 0.471 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9007.721 ? 89.294 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.813 ? 0.305 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2888.618 ? 25.500 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8637.314 ? 147.088 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 30.118 ? 0.543 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3656.648 ? 25.500 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8014.757 ? 184.538 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 39.565 ? 0.912 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5176.706 ? 0.175 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10980.079 ? 142.611 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.573 ? 0.176 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1296.269 ? 0.004 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 11054.650 ? 104.496 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.508 ? 0.137 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1376.267 ? 0.004 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10765.290 ? 158.543 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 16.264 ? 0.240 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1584.274 ? 0.007 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10384.529 ? 269.707 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 19.491 ? 0.506 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1968.284 ? 0.009 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10021.506 ? 83.034 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 25.996 ? 0.216 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2720.295 ? 0.004 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9234.903 ? 162.432 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 37.624 ? 0.662 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4272.319 ? 0.008 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9153.408 ? 246.471 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.343 ? 0.422 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1528.603 ? 25.499 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9208.859 ? 183.536 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.617 ? 0.283 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1664.603 ? 12.752 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8955.387 ? 443.439 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.991 ? 0.780 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1872.623 ? 12.759 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9003.492 ? 159.419 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 19.443 ? 0.345 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2264.620 ? 0.177 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8555.518 ? 258.422 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.678 ? 0.811 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3024.653 ? 12.743 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7949.053 ? 108.957 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 34.571 ? 0.456 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4560.715 ? 12.747 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9220.542 ? 173.481 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.238 ? 0.251 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1505.571 ? 13.148 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9242.564 ? 314.882 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.397 ? 0.466 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1633.525 ? 13.068 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9254.197 ? 158.898 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 16.533 ? 0.339 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1873.481 ? 13.053 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9069.941 ? 67.990 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 20.862 ? 0.196 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2411.997 ? 10.872 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8651.972 ? 206.534 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 28.405 ? 0.751 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3442.774 ? 13.908 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7837.249 ? 284.440 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 41.419 ? 1.585 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5541.859 ? 16.775 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4870.746 ? 273.803 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.159 ? 0.761 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2833.035 ? 12.735 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4896.378 ? 126.480 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.348 ? 0.372 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3073.028 ? 12.755 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4783.931 ? 217.902 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.661 ? 0.714 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3433.052 ? 0.283 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4723.796 ? 179.429 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 18.996 ? 0.721 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4217.069 ? 0.237 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4476.164 ? 169.028 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.591 ? 0.945 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5761.115 ? 12.740 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4165.951 ? 155.013 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 35.060 ? 1.305 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8825.190 ? 0.221 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4811.437 ? 143.082 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 12.925 ? 0.369 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2817.047 ? 12.758 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4847.861 ? 96.012 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.058 ? 0.246 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3041.046 ? 12.759 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4864.509 ? 143.861 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.888 ? 0.471 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3425.038 ? 12.753 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4641.459 ? 287.823 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 18.594 ? 1.153 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4201.077 ? 0.213 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4334.907 ? 380.714 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23.716 ? 2.146 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5737.151 ? 25.436 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4115.785 ? 178.774 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 34.605 ? 1.527 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8817.224 ? 12.706 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2239.143 ? 92.182 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 53.418 ? 2.201 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 25017.275 ? 26.095 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2263.604 ? 76.130 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 54.326 ? 1.826 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 25167.864 ? 13.589 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2272.416 ? 59.580 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 55.023 ? 1.408 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 25392.123 ? 79.977 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2199.581 ? 111.437 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 53.962 ? 2.734 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 25726.865 ? 2.559 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2218.814 ? 137.428 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 56.175 ? 3.469 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 26549.531 ? 50.670 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2167.404 ? 64.160 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 57.933 ? 1.719 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 28030.657 ? 2.393 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1846.194 ? 90.545 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 46.574 ? 2.289 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 26455.049 ? 3.332 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1857.123 ? 46.743 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47.304 ? 1.203 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 26710.728 ? 25.108 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1862.452 ? 49.515 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 48.149 ? 1.304 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 27110.338 ? 50.221 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1819.753 ? 59.179 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 48.434 ? 1.574 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 27910.523 ? 2.052 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1800.439 ? 84.762 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 50.551 ? 2.418 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 29442.793 ? 44.897 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1759.650 ? 50.198 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 54.536 ? 1.546 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 32501.048 ? 77.456 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2185.310 ? 104.244 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.508 ? 0.721 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6481.349 ? 63.711 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2130.761 ? 120.425 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.063 ? 0.795 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6921.384 ? 0.077 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1920.741 ? 204.300 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.511 ? 1.597 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7921.540 ? 63.689 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2082.415 ? 97.963 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 19.543 ? 0.942 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9841.416 ? 63.735 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1843.785 ? 181.428 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23.984 ? 2.360 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13641.602 ? 0.160 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1863.634 ? 25.522 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 38.034 ? 0.521 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 21401.574 ? 0.025 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1877.269 ? 12.591 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.754 ? 0.093 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7682.957 ? 0.771 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1811.387 ? 79.142 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.445 ? 0.590 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8363.041 ? 63.814 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1823.002 ? 36.609 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 16.277 ? 0.326 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9363.051 ? 0.888 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1801.394 ? 40.507 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 19.313 ? 0.470 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 11243.088 ? 63.737 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1684.321 ? 86.642 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.291 ? 1.249 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15123.347 ? 0.723 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1589.228 ? 52.647 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 34.619 ? 1.131 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 22843.552 ? 63.794 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3051.269 ? 66.908 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.464 ? 1.427 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23529.947 ? 71.543 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3070.712 ? 109.484 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.077 ? 2.464 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23590.100 ? 1.557 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3012.223 ? 89.020 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.715 ? 1.963 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23574.640 ? 62.410 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2891.321 ? 151.727 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 64.867 ? 3.502 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23529.884 ? 68.495 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2965.293 ? 141.615 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 66.528 ? 3.115 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23529.943 ? 68.989 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 11.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3056.267 ? 128.830 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.797 ? 2.872 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23605.536 ? 25.578 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9200.167 ? 291.255 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.341 ? 0.476 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1520.601 ? 12.745 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9090.842 ? 308.868 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.431 ? 0.526 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1664.610 ? 12.747 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9052.519 ? 185.204 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 16.027 ? 0.329 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1856.619 ? 12.752 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8771.386 ? 228.538 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 18.808 ? 0.490 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2248.642 ? 0.206 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8571.819 ? 205.613 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.789 ? 0.595 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3032.658 ? 0.178 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7857.343 ? 156.181 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 34.112 ? 0.679 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4552.720 ? 0.180 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3041.861 ? 99.272 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.079 ? 0.398 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3129.828 ? 76.496 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3033.357 ? 60.136 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.909 ? 0.206 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3425.839 ? 38.251 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3028.683 ? 73.157 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 11.119 ? 0.269 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3849.853 ? 0.539 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2900.614 ? 103.514 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.195 ? 0.551 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4769.922 ? 38.233 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2733.556 ? 154.336 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 16.981 ? 1.030 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6513.752 ? 38.637 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2559.348 ? 193.798 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.646 ? 1.956 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10098.220 ? 38.116 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3044.797 ? 66.936 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.571 ? 0.376 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4673.817 ? 38.234 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2986.789 ? 177.811 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 14.468 ? 0.785 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5081.858 ? 76.554 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2881.565 ? 112.716 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.613 ? 0.605 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5681.912 ? 38.264 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2841.131 ? 211.118 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 18.450 ? 1.371 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6809.984 ? 0.578 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2766.085 ? 162.588 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 24.103 ? 1.371 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9138.040 ? 38.319 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2483.332 ? 236.771 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 32.494 ? 3.098 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13722.185 ? 0.604 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9177.760 ? 225.258 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.152 ? 0.356 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1502.771 ? 13.573 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9251.314 ? 168.930 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.186 ? 0.246 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1494.696 ? 5.139 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9216.408 ? 233.330 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.067 ? 0.335 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1486.811 ? 13.798 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9248.310 ? 209.910 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.183 ? 0.275 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1494.814 ? 4.667 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9249.576 ? 281.071 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 13.184 ? 0.424 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1494.730 ? 4.922 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9081.784 ? 463.402 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 12.901 ? 0.653 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1489.729 ? 14.485 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4866.841 ? 140.900 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.584 ? 0.300 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2065.037 ? 25.495 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4840.136 ? 164.784 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10.676 ? 0.354 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2313.045 ? 12.763 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4757.698 ? 266.790 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 12.236 ? 0.660 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2697.009 ? 12.705 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4645.809 ? 191.650 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.988 ? 0.657 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3609.077 ? 12.759 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4494.550 ? 143.655 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23.150 ? 0.796 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5401.108 ? 38.241 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4114.499 ? 222.771 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 35.253 ? 1.913 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8985.205 ? 12.758 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; ? &lt;span class="m"&gt;0&lt;/span&gt; counts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="java"&gt;Java
&lt;/h4&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Benchmark &lt;span class="o"&gt;(&lt;/span&gt;dataSize&lt;span class="o"&gt;)&lt;/span&gt; Mode Cnt Score Error Units
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 387.169 ? 6.321 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 70.021 ? 1.164 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 189654.069 ? 115.681 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 377.727 ? 15.219 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.477 ? 2.765 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 190109.945 ? 80.942 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 382.118 ? 6.518 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.440 ? 1.181 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 190566.541 ? 16.923 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 382.082 ? 10.713 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.505 ? 1.962 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 190762.775 ? 101.785 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 373.560 ? 19.316 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.897 ? 3.514 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 190608.987 ? 21.935 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 379.437 ? 11.489 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.955 ? 2.080 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 190573.000 ? 202.019 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2BatchProcessingVariousDataSizes:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1518.361 ? 35.212 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 70.852 ? 1.647 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 48934.290 ? 19.311 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1509.035 ? 36.037 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 70.902 ? 1.701 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 49271.637 ? 30.164 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1519.621 ? 37.177 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 72.215 ? 1.773 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 49835.116 ? 38.075 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1507.166 ? 31.141 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 73.332 ? 1.529 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 51023.931 ? 18.649 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1486.835 ? 34.934 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 75.804 ? 1.781 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 53465.343 ? 3.961 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1458.546 ? 39.480 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 81.151 ? 2.178 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 58346.401 ? 25.567 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CipherReinitializationPattern:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1449.281 ? 36.350 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 85.648 ? 2.108 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 61974.037 ? 95.632 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1445.482 ? 22.918 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 86.109 ? 1.304 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 62470.040 ? 108.379 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 11.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1434.616 ? 31.140 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 85.915 ? 1.881 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 62802.057 ? 382.478 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1421.141 ? 25.734 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 85.841 ? 1.538 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 63342.072 ? 210.367 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1418.384 ? 33.546 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 88.083 ? 2.196 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 65122.078 ? 127.454 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1394.849 ? 23.761 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 91.526 ? 1.699 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68810.114 ? 216.728 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteDecryptionWorkflow:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1527.456 ? 35.277 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.003 ? 1.587 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47373.556 ? 8.658 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1527.011 ? 31.279 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.435 ? 1.410 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47683.983 ? 38.927 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1500.308 ? 54.724 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.020 ? 2.544 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 48242.936 ? 39.647 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1506.391 ? 36.396 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.035 ? 1.715 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 49450.539 ? 12.691 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1481.161 ? 81.562 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 73.271 ? 4.034 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 51875.734 ? 4.102 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1443.446 ? 72.733 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.089 ? 3.946 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 56734.592 ? 8.453 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflow:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1534.707 ? 62.005 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.126 ? 2.816 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47233.794 ? 32.006 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1504.553 ? 85.339 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.316 ? 3.877 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47617.805 ? 39.340 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1516.265 ? 41.381 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.568 ? 1.907 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 48114.090 ? 41.227 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1514.214 ? 48.627 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.399 ? 2.302 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 49447.186 ? 46.038 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1501.698 ? 39.891 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 74.556 ? 1.978 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 52063.420 ? 5.165 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1430.442 ? 40.864 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.402 ? 2.234 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 57476.754 ? 36.439 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteEncryptionWorkflowChunked:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 732.368 ? 40.024 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 76.526 ? 4.195 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 109574.865 ? 66.308 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 734.405 ? 15.889 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 77.101 ? 1.673 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 110093.065 ? 52.864 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 742.110 ? 9.504 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.618 ? 1.019 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 111094.457 ? 42.152 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 739.749 ? 14.031 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 79.833 ? 1.593 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 113169.954 ? 132.090 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 702.668 ? 79.636 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.527 ? 8.896 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 117211.280 ? 78.128 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 669.659 ? 98.376 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 80.064 ? 11.774 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 125381.873 ? 58.704 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2CompleteRoundTripWorkflow:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 729.573 ? 35.660 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 76.253 ? 3.739 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 109606.067 ? 64.650 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 737.327 ? 15.690 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 77.412 ? 1.636 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 110099.572 ? 62.393 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 730.625 ? 38.515 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 77.365 ? 4.089 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 111041.254 ? 73.947 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 740.362 ? 11.358 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 79.840 ? 1.242 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 113086.054 ? 53.118 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 727.359 ? 25.243 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 81.290 ? 2.839 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 117198.245 ? 47.707 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 722.074 ? 17.197 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 86.326 ? 2.048 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 125369.872 ? 58.012 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2DataValidationWorkflow:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1016.516 ? 31.965 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.756 ? 2.111 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 70932.012 ? 130.087 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1016.185 ? 18.601 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.088 ? 1.254 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71296.769 ? 79.860 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1008.371 ? 41.519 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.069 ? 2.814 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71830.381 ? 78.014 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 994.113 ? 37.118 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.244 ? 2.657 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 73041.524 ? 163.329 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 994.716 ? 27.394 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.584 ? 1.977 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 75465.998 ? 56.591 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 980.733 ? 19.205 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 75.068 ? 1.497 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 80267.857 ? 113.193 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairEncryption:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 599.597 ? 14.284 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 76.235 ? 1.744 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 133331.176 ? 156.843 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 590.861 ? 20.468 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 75.429 ? 2.609 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 133870.832 ? 164.067 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 572.504 ? 34.601 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 73.589 ? 4.568 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 134841.133 ? 144.800 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 579.188 ? 24.207 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 75.586 ? 3.141 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 136855.224 ? 178.798 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 580.461 ? 25.349 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.020 ? 3.450 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 140948.797 ? 171.264 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 583.881 ? 14.853 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 83.030 ? 2.165 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 149123.392 ? 181.243 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2FreshKeyPairRoundTrip:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 286.642 ? 8.674 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 84.879 ? 2.472 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 310530.412 ? 2741.177 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 289.612 ? 4.650 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 86.306 ? 1.483 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 312505.657 ? 594.276 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 288.115 ? 8.915 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 86.329 ? 2.992 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 314210.368 ? 2358.448 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 286.358 ? 5.782 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 86.723 ? 1.970 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 317581.184 ? 1165.484 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 281.091 ? 12.138 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 87.603 ? 3.849 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 326810.656 ? 701.022 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 272.962 ? 16.888 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 89.294 ? 5.326 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 343070.937 ? 1880.816 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleDecryptions:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 305.224 ? 3.343 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.934 ? 0.753 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 236837.356 ? 38.039 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 303.255 ? 7.675 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.944 ? 1.739 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 238413.655 ? 127.683 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 299.814 ? 11.103 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.962 ? 2.556 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 241207.539 ? 13.854 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 10.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 302.312 ? 6.801 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.273 ? 1.606 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 247234.052 ? 39.474 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 298.847 ? 5.589 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 73.895 ? 1.387 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 259301.049 ? 128.513 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 290.056 ? 15.397 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.442 ? 4.178 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 283597.533 ? 165.171 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2HighFrequencyMultipleEncryptions:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2937.123 ? 169.699 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 66.070 ? 3.817 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23589.390 ? 2.716 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3029.312 ? 90.155 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.121 ? 2.043 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23581.624 ? 13.445 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3026.110 ? 89.989 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.059 ? 2.057 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23584.919 ? 20.361 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3029.797 ? 42.844 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.202 ? 0.988 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23605.925 ? 26.027 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3060.793 ? 40.147 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.847 ? 0.898 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23589.641 ? 2.571 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3058.340 ? 69.578 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.775 ? 1.572 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 23581.997 ? 12.176 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2KeyGeneration:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1513.370 ? 97.998 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.338 ? 4.413 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47354.260 ? 24.716 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1497.307 ? 40.447 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.062 ? 1.833 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47671.720 ? 20.230 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1492.317 ? 35.658 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.635 ? 1.656 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 48235.068 ? 12.401 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1496.361 ? 36.165 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 70.528 ? 1.707 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 49426.746 ? 14.649 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1442.849 ? 102.687 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.344 ? 5.072 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 51853.853 ? 19.971 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1413.396 ? 107.183 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 76.472 ? 5.798 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 56738.462 ? 3.301 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MaximumDataEncryption:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 9.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 499.849 ? 19.148 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.043 ? 2.566 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 140656.386 ? 86.640 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 495.723 ? 12.083 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 66.881 ? 1.658 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 141480.278 ? 99.000 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 499.141 ? 12.523 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.056 ? 1.735 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 142982.508 ? 92.509 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 497.335 ? 4.939 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.410 ? 0.706 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 146356.056 ? 86.513 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 487.962 ? 21.815 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.292 ? 3.233 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 153211.555 ? 161.923 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 478.336 ? 8.568 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 76.024 ? 1.402 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 166669.535 ? 112.891 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryFriendlyCipherReuse:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 487.800 ? 29.169 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 66.081 ? 3.958 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 142062.522 ? 37.673 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 15.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 485.113 ? 24.798 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 66.211 ? 3.415 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 143130.882 ? 224.581 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 487.848 ? 15.029 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.374 ? 2.111 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 144830.029 ? 176.459 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 491.104 ? 16.162 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 69.439 ? 2.307 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 148273.038 ? 74.293 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 484.212 ? 12.734 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 71.828 ? 1.897 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 155557.832 ? 57.631 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 475.580 ? 12.757 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 77.186 ? 2.087 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 170197.118 ? 92.230 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MemoryIntensiveMultipleCiphers:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1487.441 ? 33.412 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 66.842 ? 1.510 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47124.091 ? 62.129 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1502.712 ? 28.401 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.561 ? 1.247 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47148.402 ? 76.031 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 8.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1421.203 ? 83.577 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 63.866 ? 3.753 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47130.508 ? 59.547 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1514.272 ? 71.599 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 68.093 ? 3.202 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47161.429 ? 85.198 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1508.213 ? 23.315 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.782 ? 1.051 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47129.175 ? 52.443 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 1492.023 ? 52.247 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 67.068 ? 2.379 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 47139.768 ? 91.297 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2MinimumDataEncryption:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 4.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 724.884 ? 35.139 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 75.220 ? 3.700 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 108829.928 ? 112.740 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;32&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 717.555 ? 47.050 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 74.844 ? 4.935 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 109382.445 ? 117.353 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;64&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 730.054 ? 43.509 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 76.823 ? 4.601 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 110348.644 ? 115.133 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;128&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 5.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 728.356 ? 30.941 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 78.147 ? 3.356 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 112512.901 ? 113.692 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;256&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 716.297 ? 31.008 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 79.824 ? 3.488 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 116861.792 ? 112.940 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 2.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;512&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 6.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 684.728 ? 47.622 ops/s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 81.971 ? 5.750 MB/sec
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.alloc.rate.norm &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 125599.525 ? 105.058 B/op
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.count &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 3.000 counts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SM2ComparisonBenchmark.sm2RoundTripWithCipherReuse:gc.time &lt;span class="m"&gt;1024&lt;/span&gt; thrpt &lt;span class="m"&gt;10&lt;/span&gt; 7.000 ms
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item></channel></rss>